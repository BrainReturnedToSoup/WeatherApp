{"version":3,"file":"944927d88d5af617cbd0.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAqsGAAsG,YAAY,YAAY,WAAW,YAAY,cAAc,aAAa,aAAa,OAAO,KAAK,YAAY,cAAc,cAAc,aAAa,WAAW,MAAM,KAAK,aAAa,aAAa,YAAY,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,YAAY,cAAc,aAAa,YAAY,aAAa,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,YAAY,cAAc,aAAa,YAAY,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,aAAa,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,cAAc,aAAa,YAAY,UAAU,aAAa,aAAa,2DAA2D,uBAAuB,oBAAoB,wBAAwB,gDAAgD,yCAAyC,4BAA4B,yBAAyB,KAAK,yCAAyC,wBAAwB,uBAAuB,8BAA8B,2BAA2B,oBAAoB,KAAK,+BAA+B,wBAAwB,2BAA2B,oBAAoB,4BAA4B,uBAAuB,KAAK,0CAA0C,wBAAwB,2BAA2B,oBAAoB,4BAA4B,KAAK,iCAAiC,wBAAwB,2BAA2B,oBAAoB,4BAA4B,KAAK,mCAAmC,6BAA6B,2BAA2B,2BAA2B,oBAAoB,+BAA+B,4BAA4B,KAAK,qCAAqC,6BAA6B,2BAA2B,oBAAoB,4BAA4B,KAAK,yCAAyC,6BAA6B,2BAA2B,2BAA2B,oBAAoB,6BAA6B,yBAAyB,4BAA4B,KAAK,sCAAsC,6BAA6B,yBAAyB,2BAA2B,oBAAoB,6BAA6B,4BAA4B,KAAK,qCAAqC,6BAA6B,6BAA6B,2BAA2B,oBAAoB,0BAA0B,yBAAyB,4BAA4B,KAAK,uBAAuB;AACxwF;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;ACpHvC;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,+FAA+F,YAAY,YAAY,WAAW,YAAY,aAAa,OAAO,KAAK,UAAU,WAAW,UAAU,WAAW,aAAa,cAAc,YAAY,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,OAAO,KAAK,YAAY,YAAY,YAAY,cAAc,WAAW,MAAM,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,OAAO,aAAa,aAAa,cAAc,WAAW,mDAAmD,uBAAuB,oBAAoB,wBAAwB,kCAAkC,0BAA0B,KAAK,sCAAsC,mBAAmB,oBAAoB,uBAAuB,oBAAoB,+BAA+B,+CAA+C,wBAAwB,qCAAqC,6CAA6C,KAAK,4BAA4B,wBAAwB,qCAAqC,KAAK,uCAAuC,wBAAwB,mBAAmB,+BAA+B,0BAA0B,wBAAwB,KAAK,sCAAsC,wBAAwB,uBAAuB,wBAAwB,2BAA2B,0BAA0B,6BAA6B,KAAK,2FAA2F,wBAAwB,+BAA+B,0BAA0B,sBAAsB,KAAK,uBAAuB;AACnrD;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;ACvEvC;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,mGAAmG,YAAY,YAAY,WAAW,YAAY,cAAc,aAAa,OAAO,KAAK,aAAa,cAAc,WAAW,WAAW,YAAY,wDAAwD,uBAAuB,oBAAoB,wBAAwB,kCAAkC,0BAA0B,6BAA6B,KAAK,gCAAgC,wBAAwB,2BAA2B,sBAAsB,mBAAmB,8BAA8B,KAAK,uBAAuB;AAC5oB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;AC7BvC;AAC6G;AACjB;AACO;AACnG,4CAA4C,4HAA2C;AACvF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F,mHAAmH,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,oBAAoB;AACvO,yCAAyC,sFAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mCAAmC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2FAA2F,YAAY,WAAW,MAAM,KAAK,aAAa,cAAc,WAAW,WAAW,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,WAAW,WAAW,aAAa,aAAa,aAAa,qGAAqG,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,sBAAsB,eAAe,uCAAuC,mBAAmB,KAAK,cAAc,2BAA2B,iCAAiC,wBAAwB,mBAAmB,8DAA8D,iCAAiC,kCAAkC,mCAAmC,KAAK,qCAAqC,kBAAkB,mBAAmB,wBAAwB,iCAAiC,gDAAgD,+CAA+C,KAAK,uBAAuB;AACjoC;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;AC1CvC;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAqqFAAqF,WAAW,UAAU,UAAU,UAAU,UAAU,YAAY,MAAM,YAAY,gBAAgB,UAAU,MAAM,KAAK,UAAU,MAAM,MAAM,YAAY,MAAM,MAAM,UAAU,KAAK,QAAQ,UAAU,UAAU,KAAK,KAAK,YAAY,aAAa,22BAA22B,gBAAgB,iBAAiB,gBAAgB,sBAAsB,oBAAoB,+BAA+B,KAAK,gLAAgL,qBAAqB,KAAK,UAAU,qBAAqB,KAAK,eAAe,uBAAuB,KAAK,sBAAsB,mBAAmB,KAAK,qEAAqE,oBAAoB,oBAAoB,KAAK,WAAW,gCAAgC,wBAAwB,KAAK,uBAAuB;AACp7D;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;ACxIvC;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,yFAAyF,YAAY,YAAY,UAAU,WAAW,UAAU,aAAa,aAAa,cAAc,aAAa,OAAO,KAAK,UAAU,WAAW,WAAW,aAAa,aAAa,YAAY,YAAY,YAAY,UAAU,aAAa,aAAa,OAAO,KAAK,aAAa,aAAa,cAAc,aAAa,OAAO,KAAK,aAAa,aAAa,OAAO,KAAK,aAAa,YAAY,aAAa,aAAa,YAAY,YAAY,YAAY,YAAY,OAAO,KAAK,WAAW,UAAU,aAAa,aAAa,qEAAqE,uBAAuB,oBAAoB,sBAAsB,mBAAmB,wBAAwB,6BAA6B,kCAAkC,0BAA0B,iCAAiC,KAAK,4CAA4C,mBAAmB,mBAAmB,uBAAuB,8BAA8B,8BAA8B,mBAAmB,kCAAkC,mBAAmB,0BAA0B,uBAAuB,iDAAiD,KAAK,kDAAkD,iCAAiC,+CAA+C,uBAAuB,iDAAiD,KAAK,qDAAqD,uBAAuB,8BAA8B,KAAK,iCAAiC,yBAAyB,uBAAuB,2BAA2B,8BAA8B,mBAAmB,gDAAgD,mBAAmB,iDAAiD,KAAK,uCAAuC,sBAAsB,wBAAwB,8BAA8B,iCAAiC,KAAK,uBAAuB;AACn/D;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;AClF1B;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAAgH;AAChH;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,gGAAO;;;;AAI0D;AAClF,OAAO,iEAAe,gGAAO,IAAI,gGAAO,UAAU,gGAAO,mBAAmB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB7E,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAAyG;AACzG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,yFAAO;;;;AAImD;AAC3E,OAAO,iEAAe,yFAAO,IAAI,yFAAO,UAAU,yFAAO,mBAAmB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB7E,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAA6G;AAC7G;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,6FAAO;;;;AAIuD;AAC/E,OAAO,iEAAe,6FAAO,IAAI,6FAAO,UAAU,6FAAO,mBAAmB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB7E,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAAqG;AACrG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,qFAAO;;;;AAI+C;AACvE,OAAO,iEAAe,qFAAO,IAAI,qFAAO,UAAU,qFAAO,mBAAmB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB7E,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAAsG;AACtG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,sFAAO;;;;AAIgD;AACxE,OAAO,iEAAe,sFAAO,IAAI,sFAAO,UAAU,sFAAO,mBAAmB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB7E,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAAmG;AACnG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,mFAAO;;;;AAI6C;AACrE,OAAO,iEAAe,mFAAO,IAAI,mFAAO,UAAU,mFAAO,mBAAmB,EAAC;;;;;;;;;;;AC1BhE;AACb;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5Da;AACb;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qEAAqE,wBAAwB,MAAM,YAAY,IAAI,gBAAgB;AACnI;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,sEAAsE,wBAAwB,MAAM,YAAY,IAAI,gBAAgB;AACpI;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qEAAqE,wBAAwB,MAAM,YAAY,IAAI,gBAAgB;AACnI;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,wEAAwE,wBAAwB,MAAM,YAAY,IAAI,gBAAgB;AACtI;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA,aAAa;AACb;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC,KAAK;AACL;AACA,aAAa,gBAAgB;AAC7B,KAAK;AACL;AACA,aAAa,gBAAgB;AAC7B,cAAc,sCAAsC;AACpD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,uBAAuB,YAAY,yBAAyB,mBAAmB;AAC/E,sCAAsC,YAAY;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,uBAAuB,YAAY,iCAAiC,gBAAgB;AACpF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uCAAuC,QAAQ,gBAAgB,aAAa;AAC5E,sBAAsB,YAAY;AAClC;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ,gBAAgB,aAAa;AAC5E,sBAAsB,YAAY;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,KAAK;AACL;AACA,mBAAmB,SAAS;AAC5B,KAAK;AACL;AACA,sBAAsB,UAAU;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,qBAAqB,QAAQ;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,wBAAwB,QAAQ;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;AACA,UAAU,2CAA2C;AACrD,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA,UAAU,sDAAsD;AAChE;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9VO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,6GAA6G,MAAM,oDAAoD,IAAI;AAC3K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAAsI,sBAAsB,eAAe,WAAW;AACtL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,kGAAkG,IAAI;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACO;AACP;AACA;AACA,0CAA0C,6BAA6B,GAAG;AAC1E;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,4BAA4B,YAAY,yBAAyB,mBAAmB;AACpF,2CAA2C,YAAY;AACvD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,4BAA4B,YAAY,iCAAiC,gBAAgB;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,uEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,QAAQ,cAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,6EAA6E,QAAQ;AACrF;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,WAAW;AACX;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,WAAW;AACX;AACA,uDAAuD;AACvD,WAAW;AACX,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3PmE,CAAC;AACpE;AACO;AACP;AACA;AACA;AACA;AACA;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,6DAA6D;AAC7D,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,iCAAiC,YAAY,2EAAiB,EAAE;AAChE,0BAA0B,iBAAiB;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,yBAAyB,YAAY,yBAAyB,mBAAmB;AACjF,wCAAwC,YAAY;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,yBAAyB,YAAY,iCAAiC,gBAAgB;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,oEAAoE,WAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU,qCAAqC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,MAAM;AACN,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtMO;AACP;AACA;AACA;AACA;AACA;AACA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,yBAAyB,YAAY,yBAAyB,mBAAmB;AACjF,wCAAwC,YAAY;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,yBAAyB,YAAY,iCAAiC,gBAAgB;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,oEAAoE,WAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,yDAAyD,QAAQ;AACjE;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA,0EAA0E,QAAQ;AAClF;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChNmE,CAAC;AACpE;AACO;AACP;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,yCAAyC;AACzC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,wCAAwC,aAAa,IAAI,gBAAgB;AACzE,UAAU,WAAW,oCAAoC;AACzD;AACA,qDAAqD;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM,GAAG;AACjD;AACA,cAAc,WAAW,qCAAqC;AAC9D;AACA,sBAAsB;AACtB,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0CAA0C,yBAAyB;AACnE;AACA,6EAA6E;AAC7E;AACA,yCAAyC;AACzC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA,cAAc,gBAAgB;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,OAAO;AACrB;AACA,6DAA6D,KAAK;AAClE,KAAK;AACL;AACA,cAAc,YAAY;AAC1B;AACA,iFAAiF,UAAU;AAC3F,KAAK;AACL;AACA,cAAc,SAAS;AACvB;AACA,+EAA+E,OAAO;AACtF,KAAK;AACL;AACA,cAAc,WAAW;AACzB;AACA,4EAA4E,SAAS;AACrF,KAAK;AACL;AACA,cAAc,aAAa;AAC3B;AACA,gFAAgF,WAAW;AAC3F,KAAK;AACL;AACA,cAAc,YAAY;AAC1B;AACA,+EAA+E,UAAU;AACzF,KAAK;AACL;AACA,cAAc,UAAU;AACxB;AACA,uFAAuF,QAAQ;AAC/F,KAAK;AACL;AACA,cAAc,aAAa;AAC3B;AACA,0FAA0F,WAAW;AACrG,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM,GAAG;AACjD;AACA,gDAAgD;AAChD,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0CAA0C,yBAAyB;AACnE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA,cAAc,gBAAgB;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA,+CAA+C,gBAAgB;AAC/D;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,MAAM,GAAG;AAClD;AACA,iEAAiE;AACjE;AACA,8BAA8B;AAC9B,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAiD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA,kBAAkB,4BAA4B;AAC9C,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,kBAAkB,aAAa;AAC/B,QAAQ;AACR,kBAAkB,aAAa;AAC/B;AACA,KAAK;AACL;AACA,cAAc,WAAW;AACzB;AACA;AACA,kBAAkB,eAAe;AACjC,QAAQ;AACR,kBAAkB,eAAe;AACjC;AACA,KAAK;AACL;AACA,cAAc,cAAc;AAC5B;AACA;AACA,kBAAkB,gBAAgB;AAClC,QAAQ;AACR,kBAAkB,gBAAgB;AAClC;AACA,KAAK;AACL;AACA,cAAc,cAAc;AAC5B;AACA;AACA,kBAAkB,kBAAkB;AACpC,QAAQ;AACR,kBAAkB,kBAAkB;AACpC;AACA,KAAK;AACL;AACA,cAAc,WAAW;AACzB;AACA;AACA,kBAAkB,aAAa;AAC/B,QAAQ;AACR,kBAAkB,gBAAgB;AAClC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB,GAAG;AAC7D;AACA,uCAAuC;AACvC;AACA,iEAAiE;AACjE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,YAAY,gCAAgC,8BAA8B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD,QAAQ;AACR,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD,QAAQ;AACR,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA,yBAAyB,2BAA2B;AACpD,QAAQ;AACR,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB,GAAG;AAC7D;AACA,uCAAuC;AACvC;AACA,iEAAiE;AACjE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxZmE,CAAC;AACpE;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,wCAAwC;AACxC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,yBAAyB,mBAAmB;AAC3F,kDAAkD,YAAY;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,iCAAiC,gBAAgB;AAChG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,8EAA8E,WAAW;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,4CAA4C;AAC5C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,yBAAyB,mBAAmB;AAC3F,kDAAkD,YAAY;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,iCAAiC,gBAAgB;AAChG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,8EAA8E,WAAW;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,sCAAsC;AACtC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,yBAAyB,mBAAmB;AAC3F,kDAAkD,YAAY;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,iCAAiC,gBAAgB;AAChG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,8EAA8E,WAAW;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA,oBAAoB,OAAO;AAC3B,iDAAiD,IAAI,IAAI;AACzD;AACA;AACA;AACA;AACA,kDAAkD;AAClD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,oCAAoC;AAC1G;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,0BAA0B;AAC/F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oCAAoC;AAC3G;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,qCAAqC;AAC7G;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,+BAA+B;AACjG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,8BAA8B;AAC/F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,kCAAkC;AACvG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,2CAA2C;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,+BAA+B,YAAY,yBAAyB,mBAAmB;AACvF,8CAA8C,YAAY;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,+BAA+B,YAAY,iCAAiC,gBAAgB;AAC5F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,0EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,QAAQ,gBAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,UAAU,4DAA4D;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACO;AACP;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,wCAAwC;AACxC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,yBAAyB,mBAAmB;AACrF,4CAA4C,YAAY;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,6BAA6B,YAAY,iCAAiC,gBAAgB;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,wEAAwE,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC;AACA;AACA,WAAW;AACX;AACA;AACA,oEAAoE;AACpE,KAAK;AACL;AACA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ,EAAE;;;;;;;;;;;;;;;;;;AC/mCiE;AACnE;AAK2C;AAC3C;AAK8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,yBAAyB,mBAAmB;AACnF,0CAA0C,YAAY;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,iCAAiC,gBAAgB;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4BAA4B,2BAA2B;AACrE;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA,+CAA+C;AAC/C,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,4CAA4C;AAC5C,IAAI;AACJ;AACA;AACA,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,iCAAiC;AACjC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,yBAAyB,mBAAmB;AACnF,0CAA0C,YAAY;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,iCAAiC,gBAAgB;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iFAAiB;AACjE;AACA;AACA;AACA,sDAAsD,uFAAuB;AAC7E;AACA;AACA;AACA,mDAAmD,oFAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,kFAAqB;AACzE;AACA;AACA,UAAU,qFAAwB;AAClC;AACA,iDAAiD,+EAAkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA,KAAK;AACL;AACA,cAAc,0BAA0B;AACxC;AACA;AACA,KAAK;AACL;AACA,cAAc,oBAAoB;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC,+DAA+D;AAC/D;AACA;AACA,KAAK;AACL;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,cAAc;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA,uCAAuC;AACvC;AACA,uCAAuC;AACvC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D;AACA,4CAA4C;AAC5C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0CAA0C,yBAAyB,GAAG;AACtE;AACA,6EAA6E;AAC7E;AACA,kCAAkC;AAClC;AACA,iDAAiD;AACjD;AACA,uBAAuB;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAiB;AACrC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,yBAAyB,mBAAmB;AACnF,0CAA0C,YAAY;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,iCAAiC,gBAAgB;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAiD;AAC7D,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,MAAM,GAAG;AAC3D;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrtBuD;AACkB;AACzE;AACO;AACP;AACA;AACA,0CAA0C,QAAQ,GAAG;AACrD;AACA,wCAAwC;AACxC;AACA,iCAAiC;AACjC;AACA,8CAA8C;AAC9C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,yBAAyB,mBAAmB;AAC3F,kDAAkD,YAAY;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,mCAAmC,YAAY,iCAAiC,gBAAgB;AAChG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,8EAA8E,WAAW;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,IAAI,GAAG,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+DAAU,2BAA2B;AAC9E;AACA,mDAAmD,iFAAoB;AACvE;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2BAA2B;AAC5E;AACA;AACA;AACA,QAAQ;AACR;AACA,yDAAyD,QAAQ;AACjE;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA,QAAQ;AACR;AACA,0EAA0E,QAAQ;AAClF;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjMsE;AACZ;AACsB;AACJ;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wFAAsB;AAC1C,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,uBAAuB,YAAY,yBAAyB,mBAAmB;AAC/E,sCAAsC,YAAY;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,uBAAuB,YAAY,iCAAiC,gBAAgB;AACpF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kEAAU;AACnD;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,wCAAwC,0BAA0B,GAAG;AACrE;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,4BAA4B;AAC5B;AACA,yCAAyC;AACzC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,oBAAoB,kEAAU;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,uBAAuB,YAAY,yBAAyB,mBAAmB;AAC/E,sCAAsC,YAAY;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,uBAAuB,YAAY,iCAAiC,gBAAgB;AACpF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAsD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAiB;AAC7B,KAAK;AACL;AACA;AACA;AACA,YAAY,oFAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wFAAsB;AAClC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClmBA;AACsE;AACtE;AACA;AACqF;AACP;AACI;AACF;AAChF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,yBAAyB,mBAAmB;AACnF,0CAA0C,YAAY;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB,aAAa;AAC5D,2BAA2B,YAAY,iCAAiC,gBAAgB;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI,qBAAqB,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,6EAA6E;AAC7E;AACA;AACA,MAAM;AACN;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,8EAAiB;AACvE;AACA,oDAAoD,sFAAqB;AACzE;AACA;AACA;AACA;AACA,sDAAsD,0FAAuB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6FAAwB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,wFAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAoD;AAChE,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;UChNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;WCrBA;;;;;;;;;;;;;;;;;;ACAuD;AACvD;AACiC;AACD;AAChC;AACwC;AACG;AACb;AACM;AACpC;AACA;AACA,yBAAyB,gEAAU;AACnC;AACA,oCAAoC;AACpC;AACA,gCAAgC;AAChC,CAAC","sources":["webpack://weatherapp/./src/stylesheets/Current_Weather.css","webpack://weatherapp/./src/stylesheets/Forecast.css","webpack://weatherapp/./src/stylesheets/General_Info.css","webpack://weatherapp/./src/stylesheets/Main.css","webpack://weatherapp/./src/stylesheets/Reset.css","webpack://weatherapp/./src/stylesheets/UI.css","webpack://weatherapp/./node_modules/css-loader/dist/runtime/api.js","webpack://weatherapp/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://weatherapp/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://weatherapp/./src/stylesheets/Current_Weather.css?1e4e","webpack://weatherapp/./src/stylesheets/Forecast.css?0fe4","webpack://weatherapp/./src/stylesheets/General_Info.css?f0c4","webpack://weatherapp/./src/stylesheets/Main.css?1961","webpack://weatherapp/./src/stylesheets/Reset.css?d827","webpack://weatherapp/./src/stylesheets/UI.css?3fae","webpack://weatherapp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://weatherapp/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://weatherapp/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://weatherapp/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://weatherapp/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://weatherapp/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://weatherapp/./src/modules/Level-0/Api-Interfaces.js","webpack://weatherapp/./src/modules/Level-0/Element-Ref-Manager.js","webpack://weatherapp/./src/modules/Level-1/Current-Location-Query.js","webpack://weatherapp/./src/modules/Level-1/Search-Bar-Constructor.js","webpack://weatherapp/./src/modules/Level-1/Search-Bar-Functionality.js","webpack://weatherapp/./src/modules/Level-1/Weather-Data-DOM-Updating.js","webpack://weatherapp/./src/modules/Level-1/Weather-Data-Filtering.js","webpack://weatherapp/./src/modules/Level-2/Weather-App-Constructor.js","webpack://weatherapp/./src/modules/Level-2/Weather-App-Functionality.js","webpack://weatherapp/./src/modules/Level-2/Weather-Current-Location.js","webpack://weatherapp/./src/modules/Level-2/Weather-Location-Search-Bar.js","webpack://weatherapp/./src/modules/Level-3/Weather.js","webpack://weatherapp/webpack/bootstrap","webpack://weatherapp/webpack/runtime/compat get default export","webpack://weatherapp/webpack/runtime/define property getters","webpack://weatherapp/webpack/runtime/global","webpack://weatherapp/webpack/runtime/hasOwnProperty shorthand","webpack://weatherapp/webpack/runtime/make namespace object","webpack://weatherapp/webpack/runtime/publicPath","webpack://weatherapp/webpack/runtime/jsonp chunk loading","webpack://weatherapp/webpack/runtime/nonce","webpack://weatherapp/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.Current-Weather.Main-Container {\r\n  grid-column: 1/4;\r\n  grid-row: 3/8;\r\n\r\n  display: grid;\r\n\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(7, 1fr);\r\n\r\n  margin-left: 35px;\r\n  margin-right: 60px;\r\n}\r\n\r\n.Current-Weather.Condition-Text {\r\n  font-size: 3.2rem;\r\n  font-weight: 500;\r\n\r\n  margin-bottom: 35px;\r\n\r\n  grid-column: 1/2;\r\n  grid-row: 2/4;\r\n}\r\n\r\n.Current-Weather.Temp {\r\n  font-size: 2.1rem;\r\n\r\n  grid-column: 1/2;\r\n  grid-row: 4/5;\r\n\r\n  margin-left: 15px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.Current-Weather.Feels-Like-Temp {\r\n  font-size: 0.7rem;\r\n\r\n  grid-column: 1/2;\r\n  grid-row: 5/6;\r\n\r\n  margin-left: 15px;\r\n}\r\n\r\n.Current-Weather.Precip {\r\n  font-size: 1.6rem;\r\n\r\n  grid-column: 1/2;\r\n  grid-row: 6/7;\r\n\r\n  margin-left: 15px;\r\n}\r\n\r\n.Current-Weather.Humidity {\r\n  justify-self: flex-end;\r\n  align-self: flex-end;\r\n\r\n  grid-column: 2/3;\r\n  grid-row: 2/3;\r\n\r\n  padding-bottom: 15px;\r\n\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.Current-Weather.Visibility {\r\n  justify-self: flex-end;\r\n\r\n  grid-column: 2/3;\r\n  grid-row: 3/4;\r\n\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.Current-Weather.Wind-Direction {\r\n  justify-self: flex-end;\r\n  align-self: flex-end;\r\n\r\n  grid-column: 2/3;\r\n  grid-row: 4/5;\r\n\r\n  margin-bottom: 5px;\r\n  margin-right: 15px;\r\n\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.Current-Weather.Wind-Degree {\r\n  justify-self: flex-end;\r\n  align-self: center;\r\n\r\n  grid-column: 2/3;\r\n  grid-row: 5/6;\r\n\r\n  margin-right: 15px;\r\n\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.Current-Weather.Wind-Speed {\r\n  justify-self: flex-end;\r\n  align-self: flex-start;\r\n\r\n  grid-column: 2/3;\r\n  grid-row: 6/7;\r\n\r\n  margin-top: 5px;\r\n  margin-right: 15px;\r\n\r\n  font-size: 0.9rem;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/stylesheets/Current_Weather.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,aAAa;;EAEb,aAAa;;EAEb,qCAAqC;EACrC,kCAAkC;;EAElC,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;;EAEhB,mBAAmB;;EAEnB,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,iBAAiB;;EAEjB,gBAAgB;EAChB,aAAa;;EAEb,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;;EAEjB,gBAAgB;EAChB,aAAa;;EAEb,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;;EAEjB,gBAAgB;EAChB,aAAa;;EAEb,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,oBAAoB;;EAEpB,gBAAgB;EAChB,aAAa;;EAEb,oBAAoB;;EAEpB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;;EAEtB,gBAAgB;EAChB,aAAa;;EAEb,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,oBAAoB;;EAEpB,gBAAgB;EAChB,aAAa;;EAEb,kBAAkB;EAClB,kBAAkB;;EAElB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;;EAElB,gBAAgB;EAChB,aAAa;;EAEb,kBAAkB;;EAElB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;EACtB,sBAAsB;;EAEtB,gBAAgB;EAChB,aAAa;;EAEb,eAAe;EACf,kBAAkB;;EAElB,iBAAiB;AACnB\",\"sourcesContent\":[\".Current-Weather.Main-Container {\\r\\n  grid-column: 1/4;\\r\\n  grid-row: 3/8;\\r\\n\\r\\n  display: grid;\\r\\n\\r\\n  grid-template-columns: repeat(2, 1fr);\\r\\n  grid-template-rows: repeat(7, 1fr);\\r\\n\\r\\n  margin-left: 35px;\\r\\n  margin-right: 60px;\\r\\n}\\r\\n\\r\\n.Current-Weather.Condition-Text {\\r\\n  font-size: 3.2rem;\\r\\n  font-weight: 500;\\r\\n\\r\\n  margin-bottom: 35px;\\r\\n\\r\\n  grid-column: 1/2;\\r\\n  grid-row: 2/4;\\r\\n}\\r\\n\\r\\n.Current-Weather.Temp {\\r\\n  font-size: 2.1rem;\\r\\n\\r\\n  grid-column: 1/2;\\r\\n  grid-row: 4/5;\\r\\n\\r\\n  margin-left: 15px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.Current-Weather.Feels-Like-Temp {\\r\\n  font-size: 0.7rem;\\r\\n\\r\\n  grid-column: 1/2;\\r\\n  grid-row: 5/6;\\r\\n\\r\\n  margin-left: 15px;\\r\\n}\\r\\n\\r\\n.Current-Weather.Precip {\\r\\n  font-size: 1.6rem;\\r\\n\\r\\n  grid-column: 1/2;\\r\\n  grid-row: 6/7;\\r\\n\\r\\n  margin-left: 15px;\\r\\n}\\r\\n\\r\\n.Current-Weather.Humidity {\\r\\n  justify-self: flex-end;\\r\\n  align-self: flex-end;\\r\\n\\r\\n  grid-column: 2/3;\\r\\n  grid-row: 2/3;\\r\\n\\r\\n  padding-bottom: 15px;\\r\\n\\r\\n  font-size: 1.5rem;\\r\\n}\\r\\n\\r\\n.Current-Weather.Visibility {\\r\\n  justify-self: flex-end;\\r\\n\\r\\n  grid-column: 2/3;\\r\\n  grid-row: 3/4;\\r\\n\\r\\n  font-size: 1.1rem;\\r\\n}\\r\\n\\r\\n.Current-Weather.Wind-Direction {\\r\\n  justify-self: flex-end;\\r\\n  align-self: flex-end;\\r\\n\\r\\n  grid-column: 2/3;\\r\\n  grid-row: 4/5;\\r\\n\\r\\n  margin-bottom: 5px;\\r\\n  margin-right: 15px;\\r\\n\\r\\n  font-size: 0.9rem;\\r\\n}\\r\\n\\r\\n.Current-Weather.Wind-Degree {\\r\\n  justify-self: flex-end;\\r\\n  align-self: center;\\r\\n\\r\\n  grid-column: 2/3;\\r\\n  grid-row: 5/6;\\r\\n\\r\\n  margin-right: 15px;\\r\\n\\r\\n  font-size: 0.9rem;\\r\\n}\\r\\n\\r\\n.Current-Weather.Wind-Speed {\\r\\n  justify-self: flex-end;\\r\\n  align-self: flex-start;\\r\\n\\r\\n  grid-column: 2/3;\\r\\n  grid-row: 6/7;\\r\\n\\r\\n  margin-top: 5px;\\r\\n  margin-right: 15px;\\r\\n\\r\\n  font-size: 0.9rem;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.Forecast.Main-Container {\r\n  grid-column: 1/4;\r\n  grid-row: 8/9;\r\n\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.Forecast-Day.Card-Container {\r\n  width: 150px;\r\n  height: 175px;\r\n\r\n  margin: 20px;\r\n  padding: 10px;\r\n\r\n  border-radius: 7.5px;\r\n\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  display: grid;\r\n\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr repeat(5, 2fr);\r\n}\r\n\r\n.Forecast-Day.Date {\r\n  font-size: 0.6rem;\r\n\r\n  text-decoration: underline;\r\n}\r\n\r\n.Forecast-Day.Condition-Image {\r\n  aspect-ratio: 1/1;\r\n  height: 75px;\r\n\r\n  justify-self: center;\r\n  align-items: center;\r\n\r\n  grid-row: 2/3;\r\n}\r\n\r\n.Forecast-Day.Condition-Text {\r\n  font-size: 0.9rem;\r\n  font-weight: 600;\r\n\r\n  grid-row: 3/4;\r\n  justify-self: center;\r\n  align-items: center;\r\n\r\n  margin-bottom: 7px;\r\n}\r\n\r\n.Forecast-Day.Temp-High,\r\n.Forecast-Day.Temp-Low,\r\n.Forecast-Day.Total-Precip {\r\n  font-size: 0.7rem;\r\n\r\n  justify-self: center;\r\n  align-items: center;\r\n\r\n  margin: 2px;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/stylesheets/Forecast.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,aAAa;;EAEb,aAAa;;EAEb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;;EAEb,YAAY;EACZ,aAAa;;EAEb,oBAAoB;;EAEpB,oCAAoC;;EAEpC,aAAa;;EAEb,0BAA0B;EAC1B,sCAAsC;AACxC;;AAEA;EACE,iBAAiB;;EAEjB,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;EACjB,YAAY;;EAEZ,oBAAoB;EACpB,mBAAmB;;EAEnB,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;;EAEhB,aAAa;EACb,oBAAoB;EACpB,mBAAmB;;EAEnB,kBAAkB;AACpB;;AAEA;;;EAGE,iBAAiB;;EAEjB,oBAAoB;EACpB,mBAAmB;;EAEnB,WAAW;AACb\",\"sourcesContent\":[\".Forecast.Main-Container {\\r\\n  grid-column: 1/4;\\r\\n  grid-row: 8/9;\\r\\n\\r\\n  display: flex;\\r\\n\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.Forecast-Day.Card-Container {\\r\\n  width: 150px;\\r\\n  height: 175px;\\r\\n\\r\\n  margin: 20px;\\r\\n  padding: 10px;\\r\\n\\r\\n  border-radius: 7.5px;\\r\\n\\r\\n  background-color: rgba(0, 0, 0, 0.6);\\r\\n\\r\\n  display: grid;\\r\\n\\r\\n  grid-template-columns: 1fr;\\r\\n  grid-template-rows: 1fr repeat(5, 2fr);\\r\\n}\\r\\n\\r\\n.Forecast-Day.Date {\\r\\n  font-size: 0.6rem;\\r\\n\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\n.Forecast-Day.Condition-Image {\\r\\n  aspect-ratio: 1/1;\\r\\n  height: 75px;\\r\\n\\r\\n  justify-self: center;\\r\\n  align-items: center;\\r\\n\\r\\n  grid-row: 2/3;\\r\\n}\\r\\n\\r\\n.Forecast-Day.Condition-Text {\\r\\n  font-size: 0.9rem;\\r\\n  font-weight: 600;\\r\\n\\r\\n  grid-row: 3/4;\\r\\n  justify-self: center;\\r\\n  align-items: center;\\r\\n\\r\\n  margin-bottom: 7px;\\r\\n}\\r\\n\\r\\n.Forecast-Day.Temp-High,\\r\\n.Forecast-Day.Temp-Low,\\r\\n.Forecast-Day.Total-Precip {\\r\\n  font-size: 0.7rem;\\r\\n\\r\\n  justify-self: center;\\r\\n  align-items: center;\\r\\n\\r\\n  margin: 2px;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.General-Info.Main-Container {\r\n  grid-column: 1/4;\r\n  grid-row: 1/2;\r\n\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding-left: 40px;\r\n}\r\n\r\n.General-Info.Location {\r\n  font-size: 2.1rem;\r\n\r\n  display: inherit;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  align-items: center;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/stylesheets/General_Info.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,aAAa;;EAEb,aAAa;;EAEb,uBAAuB;EACvB,mBAAmB;;EAEnB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;;EAEjB,gBAAgB;;EAEhB,WAAW;EACX,YAAY;;EAEZ,mBAAmB;AACrB\",\"sourcesContent\":[\".General-Info.Main-Container {\\r\\n  grid-column: 1/4;\\r\\n  grid-row: 1/2;\\r\\n\\r\\n  display: flex;\\r\\n\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  padding-left: 40px;\\r\\n}\\r\\n\\r\\n.General-Info.Location {\\r\\n  font-size: 2.1rem;\\r\\n\\r\\n  display: inherit;\\r\\n\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n\\r\\n  align-items: center;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../assets/Background.gif\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=REM:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);\"]);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n  font-family: \"REM\", sans-serif;\r\n  color: white;\r\n}\r\n\r\nbody {\r\n  padding-inline: 30px;\r\n\r\n  box-sizing: border-box;\r\n\r\n  height: 100vh;\r\n  width: 100vw;\r\n\r\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\r\n\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.Weather-App.Main-Container {\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: grid;\r\n\r\n  box-sizing: border-box;\r\n\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 100px repeat(8, 1fr);\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/stylesheets/Main.css\"],\"names\":[],\"mappings\":\"AAEA;EACE,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,oBAAoB;;EAEpB,sBAAsB;;EAEtB,aAAa;EACb,YAAY;;EAEZ,yDAAiD;;EAEjD,sBAAsB;EACtB,2BAA2B;EAC3B,4BAA4B;AAC9B;;AAEA;EACE,WAAW;EACX,YAAY;;EAEZ,aAAa;;EAEb,sBAAsB;;EAEtB,qCAAqC;EACrC,wCAAwC;AAC1C\",\"sourcesContent\":[\"@import url(\\\"https://fonts.googleapis.com/css2?family=REM:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\\\");\\r\\n\\r\\n:root {\\r\\n  font-family: \\\"REM\\\", sans-serif;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  padding-inline: 30px;\\r\\n\\r\\n  box-sizing: border-box;\\r\\n\\r\\n  height: 100vh;\\r\\n  width: 100vw;\\r\\n\\r\\n  background-image: url(\\\"../assets/Background.gif\\\");\\r\\n\\r\\n  background-size: cover;\\r\\n  background-position: center;\\r\\n  background-repeat: no-repeat;\\r\\n}\\r\\n\\r\\n.Weather-App.Main-Container {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n\\r\\n  display: grid;\\r\\n\\r\\n  box-sizing: border-box;\\r\\n\\r\\n  grid-template-columns: repeat(3, 1fr);\\r\\n  grid-template-rows: 100px repeat(8, 1fr);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\nsub,\r\nsup,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\nsection {\r\n  display: block;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nol,\r\nul {\r\n  list-style: none;\r\n}\r\nblockquote,\r\nq {\r\n  quotes: none;\r\n}\r\nblockquote:before,\r\nblockquote:after,\r\nq:before,\r\nq:after {\r\n  content: \"\";\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/stylesheets/Reset.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB\",\"sourcesContent\":[\"/* http://meyerweb.com/eric/tools/css/reset/ \\r\\n   v2.0 | 20110126\\r\\n   License: none (public domain)\\r\\n*/\\r\\n\\r\\nhtml,\\r\\nbody,\\r\\ndiv,\\r\\nspan,\\r\\napplet,\\r\\nobject,\\r\\niframe,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4,\\r\\nh5,\\r\\nh6,\\r\\np,\\r\\nblockquote,\\r\\npre,\\r\\na,\\r\\nabbr,\\r\\nacronym,\\r\\naddress,\\r\\nbig,\\r\\ncite,\\r\\ncode,\\r\\ndel,\\r\\ndfn,\\r\\nem,\\r\\nimg,\\r\\nins,\\r\\nkbd,\\r\\nq,\\r\\ns,\\r\\nsamp,\\r\\nsmall,\\r\\nstrike,\\r\\nstrong,\\r\\nsub,\\r\\nsup,\\r\\ntt,\\r\\nvar,\\r\\nb,\\r\\nu,\\r\\ni,\\r\\ncenter,\\r\\ndl,\\r\\ndt,\\r\\ndd,\\r\\nol,\\r\\nul,\\r\\nli,\\r\\nfieldset,\\r\\nform,\\r\\nlabel,\\r\\nlegend,\\r\\ntable,\\r\\ncaption,\\r\\ntbody,\\r\\ntfoot,\\r\\nthead,\\r\\ntr,\\r\\nth,\\r\\ntd,\\r\\narticle,\\r\\naside,\\r\\ncanvas,\\r\\ndetails,\\r\\nembed,\\r\\nfigure,\\r\\nfigcaption,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\noutput,\\r\\nruby,\\r\\nsection,\\r\\nsummary,\\r\\ntime,\\r\\nmark,\\r\\naudio,\\r\\nvideo {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  font-size: 100%;\\r\\n  font: inherit;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n/* HTML5 display-role reset for older browsers */\\r\\narticle,\\r\\naside,\\r\\ndetails,\\r\\nfigcaption,\\r\\nfigure,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\nsection {\\r\\n  display: block;\\r\\n}\\r\\nbody {\\r\\n  line-height: 1;\\r\\n}\\r\\nol,\\r\\nul {\\r\\n  list-style: none;\\r\\n}\\r\\nblockquote,\\r\\nq {\\r\\n  quotes: none;\\r\\n}\\r\\nblockquote:before,\\r\\nblockquote:after,\\r\\nq:before,\\r\\nq:after {\\r\\n  content: \\\"\\\";\\r\\n  content: none;\\r\\n}\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.User-Interface-Containers.Main-Container {\r\n  grid-column: 2/3;\r\n  grid-row: 7/8;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  box-sizing: border-box;\r\n}\r\n\r\n.Search-Bar-Input.Weather-Location {\r\n  width: 300px;\r\n  height: 30px;\r\n\r\n  padding: 3px;\r\n\r\n  margin-bottom: 10px;\r\n\r\n  border-radius: 10px;\r\n  border: none;\r\n\r\n  background-color: white;\r\n  color: white;\r\n\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.Search-Bar-Input.Weather-Location:focus {\r\n  outline: 1.5px solid white;\r\n\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  box-shadow: none;\r\n\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.User-Interface-Containers.Button-Container {\r\n  display: inherit;\r\n\r\n  align-items: center;\r\n}\r\n\r\n.User-Interface-Buttons {\r\n  margin-inline: 5px;\r\n\r\n  height: 30px;\r\n\r\n  font-weight: 600;\r\n\r\n  border-radius: 10px;\r\n  border: none;\r\n\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n  color: white;\r\n\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.User-Interface-Buttons:hover {\r\n  cursor: pointer;\r\n\r\n  outline: none;\r\n  background-color: white;\r\n\r\n  color: rgb(65, 65, 65);\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/stylesheets/UI.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,aAAa;;EAEb,WAAW;EACX,YAAY;;EAEZ,aAAa;EACb,sBAAsB;;EAEtB,uBAAuB;EACvB,mBAAmB;;EAEnB,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,YAAY;;EAEZ,YAAY;;EAEZ,mBAAmB;;EAEnB,mBAAmB;EACnB,YAAY;;EAEZ,uBAAuB;EACvB,YAAY;;EAEZ,eAAe;EACf,gBAAgB;;EAEhB,sCAAsC;AACxC;;AAEA;EACE,0BAA0B;;EAE1B,oCAAoC;EACpC,gBAAgB;;EAEhB,sCAAsC;AACxC;;AAEA;EACE,gBAAgB;;EAEhB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;;EAElB,YAAY;;EAEZ,gBAAgB;;EAEhB,mBAAmB;EACnB,YAAY;;EAEZ,qCAAqC;EACrC,YAAY;;EAEZ,sCAAsC;AACxC;;AAEA;EACE,eAAe;;EAEf,aAAa;EACb,uBAAuB;;EAEvB,sBAAsB;AACxB\",\"sourcesContent\":[\".User-Interface-Containers.Main-Container {\\r\\n  grid-column: 2/3;\\r\\n  grid-row: 7/8;\\r\\n\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.Search-Bar-Input.Weather-Location {\\r\\n  width: 300px;\\r\\n  height: 30px;\\r\\n\\r\\n  padding: 3px;\\r\\n\\r\\n  margin-bottom: 10px;\\r\\n\\r\\n  border-radius: 10px;\\r\\n  border: none;\\r\\n\\r\\n  background-color: white;\\r\\n  color: white;\\r\\n\\r\\n  font-size: 1rem;\\r\\n  font-weight: 500;\\r\\n\\r\\n  transition: background-color 0.2s ease;\\r\\n}\\r\\n\\r\\n.Search-Bar-Input.Weather-Location:focus {\\r\\n  outline: 1.5px solid white;\\r\\n\\r\\n  background-color: rgba(0, 0, 0, 0.6);\\r\\n  box-shadow: none;\\r\\n\\r\\n  transition: background-color 0.2s ease;\\r\\n}\\r\\n\\r\\n.User-Interface-Containers.Button-Container {\\r\\n  display: inherit;\\r\\n\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.User-Interface-Buttons {\\r\\n  margin-inline: 5px;\\r\\n\\r\\n  height: 30px;\\r\\n\\r\\n  font-weight: 600;\\r\\n\\r\\n  border-radius: 10px;\\r\\n  border: none;\\r\\n\\r\\n  background-color: rgba(0, 0, 0, 0.75);\\r\\n  color: white;\\r\\n\\r\\n  transition: background-color 0.2s ease;\\r\\n}\\r\\n\\r\\n.User-Interface-Buttons:hover {\\r\\n  cursor: pointer;\\r\\n\\r\\n  outline: none;\\r\\n  background-color: white;\\r\\n\\r\\n  color: rgb(65, 65, 65);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};","\"use strict\";\r\n\r\nmodule.exports = function (url, options) {\r\n  if (!options) {\r\n    options = {};\r\n  }\r\n  if (!url) {\r\n    return url;\r\n  }\r\n  url = String(url.__esModule ? url.default : url);\r\n\r\n  // If url is already wrapped in quotes, remove them\r\n  if (/^['\"].*['\"]$/.test(url)) {\r\n    url = url.slice(1, -1);\r\n  }\r\n  if (options.hash) {\r\n    url += options.hash;\r\n  }\r\n\r\n  // Should url be wrapped?\r\n  // See https://drafts.csswg.org/css-values-3/#urls\r\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\r\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\r\n  }\r\n  return url;\r\n};","\"use strict\";\r\n\r\nmodule.exports = function (item) {\r\n  var content = item[1];\r\n  var cssMapping = item[3];\r\n  if (!cssMapping) {\r\n    return content;\r\n  }\r\n  if (typeof btoa === \"function\") {\r\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\r\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\r\n    var sourceMapping = \"/*# \".concat(data, \" */\");\r\n    return [content].concat([sourceMapping]).join(\"\\n\");\r\n  }\r\n  return [content].join(\"\\n\");\r\n};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./Current_Weather.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./Current_Weather.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./Forecast.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./Forecast.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./General_Info.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./General_Info.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./Main.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./Main.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./Reset.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./Reset.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./UI.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./UI.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};","\"use strict\";\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;","//API INTERFACES THAT EXTEND FROM THE TEMPLATE SHOULD ALWAYS RETURN THE FETCH PROMISE FOR THEIR APIS\r\n//THIS WAY THE API INTERACTION CAN BE MODULARIZED AND WHOEVER USES THE API INSTANCE CAN CONFIGURE THEIR OWN\r\n//FUNCTIONALITY RELATING TO THE API REQUEST PROMISE. ALL THESE CLASSES DO IS PROVIDE A STRAIGHT FORWARD\r\n//WAY TO MAKE FETCH REQUESTS TO SPECIFIC APIS, THATS IT.\r\n\r\nclass ApiInterface {\r\n  //the purpose of this class is to act as a generic template that specific api\r\n  //interfacing classes can extend to and create their specific functionalities with\r\n  //using the general fetch methods within this template\r\n\r\n  //--------------------STATE-AND-CONFIG-DATA----------------------//\r\n\r\n  defaultOptions = {\r\n    get: {\r\n      method: \"get\",\r\n    },\r\n    post: {\r\n      method: \"post\",\r\n      //part of sending data to the server\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: null, //should be JSON data\r\n    },\r\n    put: {\r\n      method: \"put\",\r\n      //part of sending data to the server\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: null, //should be JSON data\r\n    },\r\n    delete: {\r\n      method: \"delete\",\r\n    },\r\n  };\r\n\r\n  //-----------------------HELPER-METHODS---------------------------//\r\n\r\n  addPayload(options, payload) {\r\n    const convertedPayload = this.convertPayloadToJSON(payload);\r\n    options.body = convertedPayload;\r\n\r\n    return options;\r\n  }\r\n\r\n  convertPayloadToJSON(payload) {\r\n    const convertedPayload = JSON.stringify(payload);\r\n    return convertedPayload;\r\n  }\r\n\r\n  processResponseAsJSON = async (response) => {\r\n    const processedResponse = await response.json();\r\n    return processedResponse;\r\n  };\r\n\r\n  //------------------------API-INTERACTION--------------------------/\r\n\r\n  requestMethods = {\r\n    get: async (url, options = this.defaultOptions.get) => {\r\n      try {\r\n        const resp = await fetch(url, options); //await a response first\r\n\r\n        //if the request was successful\r\n        if (resp.ok === true) {\r\n          const parsedData = await this.processResponseAsJSON(resp);\r\n          return parsedData;\r\n        } else {\r\n          //if the request failed for some reason\r\n          throw new Error(\r\n            `GET Request to the desired api failed, target api is '${this.configData.apiName}', '${resp.status}: ${resp.statusText}'`\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(error, error.stack);\r\n      }\r\n    },\r\n    post: async (url, options = this.defaultOptions.post, payload) => {\r\n      try {\r\n        const finalOptions = this.addPayload(options, payload);\r\n\r\n        const resp = await fetch(url, finalOptions);\r\n        //if the request was successful\r\n        if (resp.ok === true) {\r\n          const parsedData = await this.processResponseAsJSON(resp);\r\n          return parsedData;\r\n        } else {\r\n          //if the request failed for some reason\r\n          throw new Error(\r\n            `POST Request to the desired api failed, target api is '${this.configData.apiName}', '${resp.status}: ${resp.statusText}'`\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(error, error.stack);\r\n      }\r\n    },\r\n    put: async (url, options = this.defaultOptions.put, payload) => {\r\n      try {\r\n        const finalOptions = this.addPayload(options, payload);\r\n\r\n        const resp = await fetch(url, finalOptions);\r\n        //if the request was successful\r\n        if (resp.ok === true) {\r\n          const parsedData = await this.processResponseAsJSON(resp);\r\n          return parsedData;\r\n        } else {\r\n          //if the request failed for some reason\r\n          throw new Error(\r\n            `PUT Request to the desired api failed, target api is '${this.configData.apiName}', '${resp.status}: ${resp.statusText}'`\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(error, error.stack);\r\n      }\r\n    },\r\n    delete: async (url, options = this.defaultOptions.delete) => {\r\n      try {\r\n        const resp = await fetch(url, options); //await a response first\r\n\r\n        //if the request was successful\r\n        if (resp.ok === true) {\r\n          const parsedData = await this.processResponseAsJSON(resp);\r\n          return parsedData;\r\n        } else {\r\n          //if the request failed for some reason\r\n          throw new Error(\r\n            `DELETE Request to the desired api failed, target api is '${this.configData.apiName}', '${resp.status}: ${resp.statusText}'`\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(error, error.stack);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport class WeatherApi extends ApiInterface {\r\n  constructor(apiKey) {\r\n    super(); //call parent constructor\r\n\r\n    this.#argValidator(\"constructor\", { apiKey });\r\n\r\n    //define the configuration for the weather api instance\r\n    this.configData.apiName = \"WeatherApi\";\r\n    this.configData.apiKey = apiKey;\r\n  }\r\n\r\n  //---------------------STATE-AND-CONFIG-DATA------------------//\r\n\r\n  //the base template string, at which to add parameters, they are concatenated at the end of the string\r\n  configData = {\r\n    apiName: null,\r\n    apiKey: null,\r\n  };\r\n\r\n  #urlTemplate = `http://api.weatherapi.com/v1/`;\r\n\r\n  #endPoints = {\r\n    current: `current.json?`,\r\n    forecast: `forecast.json?`,\r\n  };\r\n\r\n  //---------------------ARGUMENT-VALIDATION--------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      apiKey: { type: \"string\" },\r\n    },\r\n    getCurrentWeather: {\r\n      loc: { type: \"string\" },\r\n    },\r\n    getForecast: {\r\n      loc: { type: \"string\" },\r\n      days: { type: \"number\", posOrNeg: \"positive\" },\r\n    },\r\n  };\r\n\r\n  //holds methods that actually do the validation of a specific supplied argument on one of its properties\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n           received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n            needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n           received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n    posOrNeg: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (correctInstance === \"positive\") {\r\n        if (suppliedArg !== Math.abs(suppliedArg)) {\r\n          throw new Error(`Argument '${argName}' for method '${methodOrigin}' failed integer validation,\r\n          received '${suppliedArg}' which is negative, but it needs to be positive`);\r\n        }\r\n      } else if (correctInstance === \"negative\") {\r\n        if (suppliedArg === Math.abs(suppliedArg)) {\r\n          throw new Error(`Argument '${argName}' for method '${methodOrigin}' failed integer validation,\r\n          received '${suppliedArg}' which is positive, but it needs to be negative`);\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n         corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------------------HELPER-METHODS-----------------------//\r\n\r\n  #urlParams = {\r\n    key: () => {\r\n      return `key=${this.configData.apiKey}`;\r\n    },\r\n    location: (location) => {\r\n      return `&q=${location}`;\r\n    },\r\n    numOfDays: (numOfDays) => {\r\n      return `&days=${numOfDays}`;\r\n    },\r\n    airQuality: (boolean) => {\r\n      let yesOrNo;\r\n\r\n      if (boolean) {\r\n        yesOrNo = \"yes\";\r\n      } else {\r\n        yesOrNo = \"no\";\r\n      }\r\n      return `&aqi=${yesOrNo}`;\r\n    },\r\n    weatherAlerts: (boolean) => {\r\n      let yesOrNo;\r\n\r\n      if (boolean) {\r\n        yesOrNo = \"yes\";\r\n      } else {\r\n        yesOrNo = \"no\";\r\n      }\r\n      return `&alerts=${yesOrNo}`;\r\n    },\r\n  };\r\n\r\n  //------------------------API-INTERFACE------------------------//\r\n\r\n  //location method is the method to use to retrieve current weather data. Example: IP, city, etc.\r\n  //location value is the corresponding value, so say the corresponding IP, or city, etc.\r\n  getCurrentWeather(loc) {\r\n    try {\r\n      //validate input\r\n      this.#argValidator(\"getCurrentWeather\", { loc });\r\n\r\n      //get the base url and the parameter string constructors\r\n      const baseUrl = this.#urlTemplate,\r\n        { key, location, airQuality, weatherAlerts } = this.#urlParams,\r\n        { get } = this.requestMethods;\r\n\r\n      //build the necessary parameters\r\n      const endPointString = this.#endPoints.current,\r\n        keyString = key(),\r\n        locString = location(loc),\r\n        airQualityString = airQuality(false),\r\n        weatherAlertsString = weatherAlerts(false);\r\n\r\n      //concat into the final url string\r\n      const finalUrl =\r\n        baseUrl +\r\n        endPointString +\r\n        keyString +\r\n        locString +\r\n        airQualityString +\r\n        weatherAlertsString;\r\n\r\n      //make a get request that returns a promise instance\r\n      const requestPromise = get(finalUrl);\r\n\r\n      return requestPromise;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  getForecast(loc, days) {\r\n    try {\r\n      //validate input\r\n      this.#argValidator(\"getForecast\", { loc, days });\r\n\r\n      //get the base url and the parameter string constructors\r\n      const baseUrl = this.#urlTemplate,\r\n        { key, location, numOfDays, airQuality, weatherAlerts } =\r\n          this.#urlParams,\r\n        { get } = this.requestMethods;\r\n\r\n      //build the necessary parameters\r\n      const endPointString = this.#endPoints.forecast,\r\n        keyString = key(),\r\n        locString = location(loc),\r\n        numOfDaysString = numOfDays(days),\r\n        airQualityString = airQuality(false),\r\n        weatherAlertsString = weatherAlerts(false);\r\n\r\n      //concat into the final url string\r\n      const finalUrl =\r\n        baseUrl +\r\n        endPointString +\r\n        keyString +\r\n        locString +\r\n        numOfDaysString +\r\n        airQualityString +\r\n        weatherAlertsString;\r\n\r\n      //make a get request that returns a promise instance\r\n      const requestPromise = get(finalUrl);\r\n\r\n      return requestPromise;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","export class ElementRefManager {\r\n  //acts as a means of managing all element references supplied to the class instance\r\n  //highly reuseable as it can be applied to pretty much any front end feature\r\n\r\n  #cache = new Map();\r\n\r\n  //will be what actually manipulates the cache based on the instructions given, also returns any errors that it comes across when doing so\r\n  #cacheManipulator(methodType, key, value) {\r\n    const errors = [];\r\n\r\n    if (typeof key === \"string\") {\r\n      switch (methodType) {\r\n        case \"set\":\r\n          if (value instanceof Element) {\r\n            this.#cache.set(key, value);\r\n          } else {\r\n            errors.push(\r\n              new TypeError(\r\n                `Supplied value to be stored within the element cache manager is not an element, received '${value}' as the value corresponding to the supplied key '${key}'`\r\n              )\r\n            );\r\n          }\r\n          break;\r\n        case \"get\":\r\n          const reference = this.#cache.get(key);\r\n          return reference;\r\n        case \"delete\":\r\n          this.#cache.delete(key);\r\n          break;\r\n        default:\r\n          errors.push(\r\n            new SyntaxError(\r\n              `Supplied 'methodType' argument value does not match any of the valid methods available to enact on the cache within '${this.constructor.name}', received '${methodType}' as the supplied method type`\r\n            )\r\n          );\r\n      }\r\n    } else {\r\n      errors.push(\r\n        new TypeError(\r\n          `Supplied 'key' argument value is an incorrect data type, must be a string, received '${key}'`\r\n        )\r\n      );\r\n    }\r\n\r\n    this.#throwFoundErrors(errors);\r\n  }\r\n\r\n  //for throwing multiple errors found within an operation, so\r\n  //that a try/catch can potentially handle multiple errors as opposed to say only one error at a time if needed\r\n  #throwFoundErrors(errorArr) {\r\n    if (errorArr.length > 0) {\r\n      throw errorArr;\r\n    }\r\n  }\r\n\r\n  //APIs for adding, removing, or retrieving stored element refs\r\n  addRef(key, value) {\r\n    try {\r\n      this.#cacheManipulator(\"set\", key, value);\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  deleteRef(key) {\r\n    try {\r\n      this.#cacheManipulator(\"delete\", key);\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  retrieveRef(key) {\r\n    try {\r\n      return this.#cacheManipulator(\"get\", key);\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  size() {\r\n    return this.#cache.size;\r\n  }\r\n}\r\n","//a way to ask for the current location, and then make an api request using said\r\n//current location, then emit the data from the api request. This can be configured\r\n//for any use case that may require using the users current location to get data\r\nexport class CurrentLocationQuery {\r\n  constructor(apiInstance, mediatorMethod) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { apiInstance, mediatorMethod }); //validate the args\r\n\r\n      //save the args to the state, they will be used upon current location querying\r\n      this.#helperClasses.apiInstance = apiInstance;\r\n\r\n      this.#configData.mediatorMethod = mediatorMethod;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      apiInstance: {\r\n        instanceof: Object,\r\n      },\r\n      mediatorMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    subscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n      entryPointMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    unsubscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                 needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n              corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------------STATE-AND-CONFIG-DATA---------------------//\r\n\r\n  #configData = {\r\n    mediatorMethod: null,\r\n  };\r\n\r\n  #stateData = {\r\n    requestInProgress: false,\r\n  };\r\n\r\n  #helperClasses = {\r\n    apiInstance: null,\r\n  };\r\n\r\n  //----------------------HELPER-METHODS------------------------//\r\n\r\n  //make an api request utilizing the api instance and mediator method\r\n  #makeApiRequest(lon, lat) {\r\n    const { mediatorMethod } = this.#configData,\r\n      { apiInstance } = this.#helperClasses,\r\n      responsePromise = mediatorMethod(lon, lat, apiInstance);\r\n    //faciliate the api request using the mediator method, this method will return the promise made by the api instance\r\n\r\n    return responsePromise;\r\n  }\r\n\r\n  #extractCoords(locationData) {\r\n    //should be an object returned from geolocation api full of location data, access the coordinates it has\r\n    const { longitude, latitude } = locationData.coords;\r\n\r\n    return { longitude, latitude }; //return both of these values in an obj\r\n  }\r\n\r\n  //request the current location of the user\r\n  #requestCurrentLocation() {\r\n    if (navigator.geolocation) {\r\n      //create a promise for the current position data,\r\n      //not going to facilitate any functionality relating to the outcome of said promise,\r\n      //just returning a promise instance\r\n      const positionPromise = new Promise((resolve, reject) =>\r\n        navigator.geolocation.getCurrentPosition(resolve, reject)\r\n      );\r\n\r\n      return positionPromise;\r\n    } else {\r\n      console.warn(\r\n        `Browser does not support the geolocation api, failed to fetch current location`\r\n      );\r\n    }\r\n  }\r\n\r\n  //---------------------FETCH-DATA-PUB-SUB---------------------//\r\n\r\n  //will be supplied to the SearchBar Functionality class subscription, so that the controller can emit\r\n  //data from successful api requests\r\n  #emitCurrentLocationWeatherData(apiData) {\r\n    const numOfSubscribers = Object.keys(this.#subscribers).length;\r\n\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#subscribers) {\r\n        this.#subscribers[subscriber](apiData);\r\n      }\r\n    }\r\n  }\r\n\r\n  //list of subscribers with their corresponding methods to execute when a successful api request goes through\r\n  #subscribers = {};\r\n\r\n  subscribe(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribe\", { subName, entryPointMethod });\r\n\r\n      if (!this.#subscribers.hasOwnProperty(subName)) {\r\n        this.#subscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to add a subscriber to the weather app search bar publisher, as the\r\n             subscriber seems to already exist, received '${subName}' as the subscriber being added`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  unsubscribe(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribe\", { subName });\r\n\r\n      if (this.#subscribers.hasOwnProperty(subName)) {\r\n        delete this.#subscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to remove a subscriber from the weather app search bar publisher, as the\r\n             subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //----------------------------APIs----------------------------//\r\n\r\n  //api to ask the user for their location, and then use the location data to\r\n  //make and api request\r\n  requestCurrentLocation() {\r\n    try {\r\n      //check if a request is in progress or not\r\n      if (!this.#stateData.requestInProgress) {\r\n        this.#stateData.requestInProgress = true; //commence the request process\r\n\r\n        const locationPromise = this.#requestCurrentLocation(), //this will activate the pop up that asks the user to give their current location\r\n          classScope = this;\r\n\r\n        locationPromise\r\n          .then((locationData) => {\r\n            const coords = this.#extractCoords(locationData); //grab the coords from the geolocation response\r\n            return coords;\r\n          })\r\n          .then((coords) => {\r\n            const { longitude, latitude } = coords,\r\n              responsePromise = this.#makeApiRequest.bind(classScope)(\r\n                longitude,\r\n                latitude\r\n              );\r\n            //make an api request with these coordinates to the supplied api instance, should return a promise for said api request\r\n            //need to bind the scope as well so the scope within the method execution doesn't point to the promise object\r\n\r\n            return responsePromise; //return the promise instance\r\n          })\r\n          .then((responseData) => {\r\n            this.#emitCurrentLocationWeatherData.bind(classScope)(responseData);\r\n            //when the response is successful, emit the data to the subscribers,\r\n            //need to bind the scope as well so the scope within the method execution doesn't point to the promise object\r\n          })\r\n          .catch((error) => {\r\n            //if the user denied current location use\r\n            if ((error.code = error.PERMISSION_DENIED)) {\r\n              console.warn(\r\n                `User declined to share location, corresponding api request cancelled`\r\n              );\r\n            } else {\r\n              //if an actual error occurred\r\n              console.error(error, error.stack);\r\n            }\r\n          })\r\n          .finally(() => {\r\n            this.#stateData.requestInProgress = false; //reset the state, the request is complete regardless if it succeeded or failed\r\n          });\r\n      } else {\r\n        console.warn(\r\n          `Attempting to make a current location query while another is still in progress`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","import { ElementRefManager } from \"../Level-0/Element-Ref-Manager\"; //requires this class reference for its argument validation\r\n\r\nexport class SearchBarConstructor {\r\n  constructor(argsObj) {\r\n    try {\r\n      this.#argValidator(\"constructor\", argsObj);\r\n\r\n      //reference the properties within the supplied argsObj\r\n      const { uniqueIdentifier, elementReferenceManager, dynamicOptionsOn } =\r\n        argsObj;\r\n\r\n      //config data to determine some characteristics of the constructed search bar\r\n      this.#configData.uniqueIdentifier = uniqueIdentifier;\r\n      this.#configData.dynamicOptionsOn = dynamicOptionsOn;\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //class instance to store each individual element reference\r\n\r\n      this.#completeSearchBar = this.#createSearchBarFrag(); //create the entire search bar fragment and save it to the state\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //--------------------ARGUMENT-VALIDATION-------------------------//\r\n\r\n  #argValidationData = {\r\n    //method\r\n    constructor: {\r\n      //args\r\n      uniqueIdentifier: {\r\n        //properties\r\n        type: \"string\",\r\n      },\r\n      elementReferenceManager: { instanceof: ElementRefManager },\r\n      dynamicOptionsOn: { type: \"boolean\" },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n             received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n              needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n             received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n           corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //---------------------STATE-AND-CONFIG-DATA---------------------//\r\n\r\n  #configData = {\r\n    uniqueIdentifier: null, //used to distinguish instances, as well as make the search bar unique on the DOM\r\n    dynamicOptionsOn: null, //decides whether to append a datalist and configure the input with it as well\r\n  };\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null, //used to store references instead of spam querying\r\n  };\r\n\r\n  #completeSearchBar = null;\r\n\r\n  //--------------------ELEMENT-REFERENCE-CACHING-------------------//\r\n\r\n  #storeElementRef(identifier, element) {\r\n    this.#helperClasses.elementReferenceManager.addRef(identifier, element);\r\n  }\r\n\r\n  //----------------------ELEMENT-CONSTRUCTION----------------------//\r\n\r\n  #elementConstructors = {\r\n    form: () => {\r\n      const formElement = document.createElement(\"form\"),\r\n        { uniqueIdentifier } = this.#configData;\r\n\r\n      //define classes\r\n      formElement.classList.add(\"Search-Bar-Form\");\r\n      formElement.classList.add(uniqueIdentifier);\r\n\r\n      //define attributes\r\n      formElement.setAttribute(\"novalidate\", \"\"); //part of implementing the search bar functionality manually\r\n\r\n      //store reference\r\n      this.#storeElementRef(\"Search-Bar-Form\", formElement);\r\n\r\n      return formElement;\r\n    },\r\n    input: () => {\r\n      const inputElement = document.createElement(\"input\"),\r\n        { uniqueIdentifier, dynamicOptionsOn } = this.#configData;\r\n\r\n      //define classes\r\n      inputElement.classList.add(\"Search-Bar-Input\");\r\n      inputElement.classList.add(uniqueIdentifier);\r\n\r\n      //define attributes\r\n      if (dynamicOptionsOn) {\r\n        //if this search bar will feature dynamic options in some capacity\r\n        //add the necessary attribute to link the data list to the input\r\n        inputElement.setAttribute(\r\n          \"list\",\r\n          `Search-Bar-Data-List-${uniqueIdentifier}`\r\n        );\r\n      }\r\n\r\n      //store reference\r\n      this.#storeElementRef(\"Search-Bar-Input\", inputElement);\r\n\r\n      return inputElement;\r\n    },\r\n    dataList: () => {\r\n      const dataListElement = document.createElement(\"datalist\"),\r\n        { uniqueIdentifier } = this.#configData;\r\n\r\n      //define classes\r\n      dataListElement.classList.add(\"Search-Bar-Data-List\");\r\n      dataListElement.classList.add(uniqueIdentifier);\r\n\r\n      //define attributes\r\n      dataListElement.setAttribute(\r\n        \"id\",\r\n        `Search-Bar-Data-List-${uniqueIdentifier}`\r\n      ); //should match the list attribute value on the corresponding input field\r\n\r\n      //store reference\r\n      this.#storeElementRef(\"Search-Bar-Data-List\", dataListElement);\r\n\r\n      return dataListElement;\r\n    },\r\n  };\r\n\r\n  //----------------------SEARCH-BAR-ASSEMBLY-----------------------//\r\n\r\n  #createSearchBarFrag() {\r\n    const { dynamicOptionsOn } = this.#configData;\r\n\r\n    //create base search bar\r\n    const formElement = this.#elementConstructors.form(),\r\n      inputElement = this.#elementConstructors.input();\r\n\r\n    formElement.append(inputElement);\r\n\r\n    if (dynamicOptionsOn) {\r\n      //transform search bar into one with a data list for dynamic options\r\n      const dataListElement = this.#elementConstructors.dataList();\r\n\r\n      formElement.append(dataListElement);\r\n\r\n      return formElement; //return data list search bar\r\n    } else {\r\n      return formElement; //return base search bar\r\n    }\r\n  }\r\n\r\n  //------------------------------APIs------------------------------//\r\n\r\n  returnSearchBarFragment() {\r\n    return this.#completeSearchBar;\r\n    //return the complete search bar that was constructed and save to state upon the class instance being made\r\n  }\r\n}\r\n","export class SearchBarFunctionality {\r\n  constructor(argsObj) {\r\n    try {\r\n      this.#argValidator(\"constructor\", argsObj);\r\n\r\n      //apply args to state and config\r\n      const { searchBarForm, searchBarInput } = argsObj;\r\n\r\n      //save some important references to state\r\n      this.#elementReferences.searchBarForm = searchBarForm;\r\n      this.#elementReferences.searchBarInput = searchBarInput;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    //methods\r\n    constructor: {\r\n      //args\r\n      searchBarForm: {\r\n        instanceof: Element,\r\n      },\r\n      searchBarInput: {\r\n        instanceof: Element,\r\n      },\r\n    },\r\n    subscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n      entryPointMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    unsubscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n             received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n              needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n             received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n           corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------------STATE-AND-CONFIG-DATA----------------------//\r\n\r\n  #stateData = {\r\n    functionalityActive: false,\r\n  };\r\n\r\n  #elementReferences = {\r\n    searchBarForm: null,\r\n    searchBarInput: null,\r\n  };\r\n\r\n  //-------------------EVENT-LISTENERS---------------------------//\r\n\r\n  #submitFunc = (event) => {\r\n    event.preventDefault(); //prevent regular form submit behavior\r\n\r\n    const searchBarInputElement = this.#elementReferences.searchBarInput;\r\n\r\n    this.#emitSearchBarText(searchBarInputElement.value);\r\n  };\r\n\r\n  #addEventListeners() {\r\n    this.#elementReferences.searchBarForm.addEventListener(\r\n      \"submit\",\r\n      this.#submitFunc\r\n    ); //use the unique as the event listener callback\r\n  }\r\n\r\n  #removeEventListeners() {\r\n    this.#elementReferences.searchBarForm.removeEventListener(\r\n      \"submit\",\r\n      this.#submitFunc\r\n    ); //use it to remove the submit event listener\r\n  }\r\n\r\n  //--------------------INPUT-VALUE-PUB-SUB-----------------------//\r\n\r\n  #emitSearchBarText = async (input) => {\r\n    const numOfSubscribers = Object.keys(this.#subscribers).length;\r\n\r\n    //check for subscribers\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#subscribers) {\r\n        this.#subscribers[subscriber](input);\r\n      }\r\n    }\r\n  }; //emits the search bar input to all of the present subscribers\r\n\r\n  #subscribers = {};\r\n\r\n  subscribe(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribe\", { subName, entryPointMethod });\r\n\r\n      if (!this.#subscribers.hasOwnProperty(subName)) {\r\n        this.#subscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(`Failed to add a subscriber to the search bar functionality publisher, as the\r\n          subscriber seems to already exist, received '${subName}' as the subscriber being added`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  unsubscribe(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribe\", { subName });\r\n\r\n      if (this.#subscribers.hasOwnProperty(subName)) {\r\n        delete this.#subscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(`Failed to remove a subscriber from the search bar functionality publisher, as the\r\n          subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //-------------------------APIs--------------------------------//\r\n\r\n  //activate or deactivate the functionality of the search bar instance\r\n\r\n  activate() {\r\n    try {\r\n      if (!this.#stateData.functionalityActive) {\r\n        this.#addEventListeners(); //append the event listeners to the target form element\r\n\r\n        this.#stateData.functionalityActive = true;\r\n      } else {\r\n        throw new Error(\r\n          `Failed to activate the functionality on a specific search bar instance, it appears to already be on`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  deactivate() {\r\n    try {\r\n      if (this.#stateData.functionalityActive) {\r\n        this.#removeEventListeners(); //remove the event listeners from the target form element\r\n\r\n        this.#stateData.functionalityActive = false;\r\n      } else {\r\n        throw new Error(\r\n          `Failed to deactivate the functionality on a specific search bar instance, it appears to already be off`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","import { ElementRefManager } from \"../Level-0/Element-Ref-Manager\"; //DEPENDENCY FOR THESE CLASSES TO USE ARG VALIDATION\r\n\r\nexport class ApplyGeneralInfoData {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //add helper class to state\r\n\r\n      this.#retrieveElementReferences(); //retrieve the necessary references\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //-------------ARGUMENT-VALIDATION---------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n    applyData: {\r\n      data: {\r\n        type: \"object\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------STATE-AND-CONFIG-DATA--------------//\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #retrievedElementReferences = {\r\n    location: null,\r\n  };\r\n\r\n  //---------------HELPER-METHODS------------------//\r\n\r\n  #retrieveElementReferences() {\r\n    const { elementReferenceManager } = this.#helperClasses,\r\n      locationElementRef = elementReferenceManager.retrieveRef(\r\n        `General-Info-Location`\r\n      );\r\n\r\n    this.#retrievedElementReferences.location = locationElementRef;\r\n  }\r\n\r\n  #applyDataToElementReference = {\r\n    location: (data) => {\r\n      const locationName = data.name,\r\n        locationCountry = data.country; //pull the references from the received data\r\n\r\n      const completeLocationString = `${locationName}, ${locationCountry}`, //make a complete string to display on the DOM\r\n        { location } = this.#retrievedElementReferences; //pull the references to the element being altered\r\n\r\n      location.textContent = completeLocationString; //apply the data as text within the element\r\n    },\r\n  };\r\n\r\n  //-------------------APIs------------------------//\r\n\r\n  applyData(data) {\r\n    try {\r\n      this.#argValidator(\"applyData\", { data }); //validate args\r\n\r\n      const { location } = this.#applyDataToElementReference; //get the various helper methods that use the incoming data\r\n\r\n      location(data); //apply the data to the corresponding methods that update the DOM\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ApplyCurrentWeatherData {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager });\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //store the supplied reference manager instance into state\r\n\r\n      this.#retrieveElementReferences(); //retrieve the required references from the ref manager\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //-------------ARGUMENT-VALIDATION---------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n    applyData: {\r\n      data: { type: \"object\" },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------STATE-AND-CONFIG-DATA--------------//\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #retrievedElementReferences = {\r\n    conditionText: null,\r\n    temp: null,\r\n    feelsLikeTemp: null,\r\n    precip: null,\r\n    humidity: null,\r\n    visibility: null,\r\n    windDegree: null,\r\n    windDirection: null,\r\n    windSpeed: null,\r\n  };\r\n\r\n  //---------------HELPER-METHODS------------------//\r\n\r\n  #retrieveElementReferences() {\r\n    const { elementReferenceManager } = this.#helperClasses;\r\n\r\n    this.#retrievedElementReferences = {\r\n      conditionText: elementReferenceManager.retrieveRef(\r\n        `Current-Weather-Condition-Text`\r\n      ),\r\n      temp: elementReferenceManager.retrieveRef(`Current-Weather-Temp`),\r\n      feelsLikeTemp: elementReferenceManager.retrieveRef(\r\n        `Current-Weather-Feels-Like-Temp`\r\n      ),\r\n      precip: elementReferenceManager.retrieveRef(`Current-Weather-Precip`),\r\n      humidity: elementReferenceManager.retrieveRef(`Current-Weather-Humidity`),\r\n      visibility: elementReferenceManager.retrieveRef(\r\n        `Current-Weather-Visibility`\r\n      ),\r\n      windDegree: elementReferenceManager.retrieveRef(\r\n        `Current-Weather-Wind-Degree`\r\n      ),\r\n      windDirection: elementReferenceManager.retrieveRef(\r\n        `Current-Weather-Wind-Direction`\r\n      ),\r\n      windSpeed: elementReferenceManager.retrieveRef(\r\n        `Current-Weather-Wind-Speed`\r\n      ),\r\n    };\r\n  }\r\n\r\n  #applyDataToElementReferences(data) {\r\n    for (let dataMethod in this.#dataApplyingMethods) {\r\n      this.#dataApplyingMethods[dataMethod](data);\r\n    }\r\n  }\r\n\r\n  #dataApplyingMethods = {\r\n    conditionText: (data) => {\r\n      const { conditionText } = data;\r\n\r\n      this.#retrievedElementReferences.conditionText.textContent =\r\n        conditionText;\r\n    },\r\n    temp: (data) => {\r\n      const { temp } = data;\r\n\r\n      this.#retrievedElementReferences.temp.textContent = `${temp}`;\r\n    },\r\n    feelsLike: (data) => {\r\n      const { feelsLike } = data;\r\n\r\n      this.#retrievedElementReferences.feelsLikeTemp.textContent = `Feels Like ${feelsLike}`;\r\n    },\r\n    precip: (data) => {\r\n      const { precip } = data;\r\n\r\n      this.#retrievedElementReferences.precip.textContent = `Precipitation - ${precip}`;\r\n    },\r\n    humidity: (data) => {\r\n      const { humidity } = data;\r\n\r\n      this.#retrievedElementReferences.humidity.textContent = `Humidity - ${humidity}`;\r\n    },\r\n    visibility: (data) => {\r\n      const { visibility } = data;\r\n\r\n      this.#retrievedElementReferences.visibility.textContent = `Visibility - ${visibility}`;\r\n    },\r\n    windSpeed: (data) => {\r\n      const { windSpeed } = data;\r\n\r\n      this.#retrievedElementReferences.windSpeed.textContent = `Wind Speed - ${windSpeed}`;\r\n    },\r\n    windDir: (data) => {\r\n      const { windDir } = data;\r\n\r\n      this.#retrievedElementReferences.windDirection.textContent = `Wind Direction - ${windDir}`;\r\n    },\r\n    windDegree: (data) => {\r\n      const { windDegree } = data;\r\n\r\n      this.#retrievedElementReferences.windDegree.textContent = `Wind Direction (deg) - ${windDegree}`;\r\n    },\r\n  };\r\n\r\n  //-------------------APIs------------------------//\r\n\r\n  applyData(data) {\r\n    try {\r\n      this.#argValidator(\"applyData\", { data }); //validate args\r\n\r\n      this.#applyDataToElementReferences(data); //begin applying the received data to the corresponding elements\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ApplyForecastData {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager });\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //-------------ARGUMENT-VALIDATION---------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n    applyData: {\r\n      data: { type: \"object\" },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------STATE-AND-CONFIG-DATA--------------//\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #retrievedElementRefs = {};\r\n\r\n  #stateData = {\r\n    numOfForecastDays: null,\r\n  };\r\n\r\n  //---------INITIALIZE-ELEMENT-REFS-CACHE---------//\r\n\r\n  #initRetrievedElementRefsStruct(numOfDays) {\r\n    for (let i = 1; i <= numOfDays; i++) {\r\n      this.#retrievedElementRefs[`Day-${i}`] = {};\r\n    }\r\n  }\r\n\r\n  //---------------HELPER-METHODS------------------//\r\n\r\n  //gets the necessary element references for the\r\n  //current weather portion of the web page\r\n  #retrieveElementRefs() {\r\n    for (let dayString in this.#retrievedElementRefs) {\r\n      this.#retrieveElementRefsByDay(dayString);\r\n    }\r\n  }\r\n\r\n  #retrieveElementRefsByDay(dayString) {\r\n    const { elementReferenceManager } = this.#helperClasses,\r\n      forecastDayObj = this.#retrievedElementRefs[dayString];\r\n\r\n    //define all of the necessary element references corresponding to the day\r\n    //they represent in each corresponding retrievedelementref key value pair\r\n    forecastDayObj[\"container\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Card-Container-${dayString}`\r\n    );\r\n\r\n    forecastDayObj[\"date\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Date-${dayString}`\r\n    );\r\n\r\n    forecastDayObj[\"conditionText\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Condition-Text-${dayString}`\r\n    );\r\n\r\n    forecastDayObj[\"conditionImage\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Condition-Image-${dayString}`\r\n    );\r\n\r\n    forecastDayObj[\"tempHigh\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Temp-High-${dayString}`\r\n    );\r\n\r\n    forecastDayObj[\"tempLow\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Temp-Low-${dayString}`\r\n    );\r\n\r\n    forecastDayObj[\"totalPrecip\"] = elementReferenceManager.retrieveRef(\r\n      `Forecast-Day-Total-Precip-${dayString}`\r\n    );\r\n  }\r\n\r\n  #updateElements(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      //retrieve the forecast element references based on the target day\r\n      const elementRefs = this.#retrievedElementRefs[`Day-${i + 1}`];\r\n\r\n      //define properties on the corresponding element\r\n      //references retrieved corresponding to the data array\r\n      elementRefs.date.textContent = data[i].date;\r\n\r\n      elementRefs.conditionText.textContent = data[i].conditionText;\r\n\r\n      elementRefs.conditionImage.src = data[i].conditionImage;\r\n\r\n      elementRefs.tempHigh.textContent = `High ${data[i].maxTemp}`;\r\n\r\n      elementRefs.tempLow.textContent = `Low ${data[i].minTemp}`;\r\n\r\n      elementRefs.totalPrecip.textContent = `Precip ${data[i].totalPrecip}`;\r\n    }\r\n  }\r\n\r\n  //-------------------APIs------------------------//\r\n\r\n  applyData(data) {\r\n    try {\r\n      this.#argValidator(\"applyData\", { data });\r\n\r\n      //only initialize and retrieve if the number of forecast days changes\r\n      if (data.length !== this.#stateData.numOfForecastDays) {\r\n        this.#initRetrievedElementRefsStruct(data.length);\r\n\r\n        this.#retrieveElementRefs();\r\n\r\n        this.#stateData.numOfForecastDays = data.length;\r\n      }\r\n\r\n      this.#updateElements(data); //apply the data to the elements\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","export class GeneralInfoDataFilter {\r\n  //----------ARGUMENT-VALIDATION----------//\r\n\r\n  #argValidationData = {\r\n    filterData: {\r\n      data: {\r\n        type: \"object\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //-------------DATA-FILTERING------------//\r\n\r\n  #createFilteredDataSet(data) {\r\n    const locationData = data.location,\r\n      filteredDataSet = {\r\n        name: locationData.name,\r\n        country: locationData.country,\r\n      };\r\n\r\n    return filteredDataSet;\r\n  }\r\n\r\n  //------------------APIs-----------------//\r\n\r\n  //will take the data and the unit rules to commence a filtering process\r\n  filterData(data) {\r\n    try {\r\n      this.#argValidator(`filterData`, { data }); //validate args\r\n\r\n      const filteredDataSet = this.#createFilteredDataSet(data); //get a filtered data set using the supplied data\r\n\r\n      return filteredDataSet; //returned said data set\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\nexport class CurrentWeatherDataFilter {\r\n  //-----------ARGUMENT-VALIDATION---------//\r\n\r\n  #argValidationData = {\r\n    filterData: {\r\n      data: {\r\n        type: \"object\",\r\n      },\r\n      unitRules: {\r\n        type: \"object\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //---------STATE-AND-CONFIG-DATA---------//\r\n\r\n  #unitRules = null;\r\n\r\n  //------------APPLY-UNIT-RULES-----------//\r\n\r\n  #applyUnitRules(unitRules) {\r\n    this.#unitRules = unitRules;\r\n  }\r\n\r\n  //-------------DATA-FILTERING------------//\r\n\r\n  #createFilteredDataSet(data) {\r\n    const { temp, windSpeed, precip, feelsLike, visibility } =\r\n        this.#dataFilteringMethods,\r\n      currentWeatherData = data.current;\r\n\r\n    //create a new data set with filtered data\r\n    const filteredDataSet = {\r\n      conditionText: currentWeatherData.condition.text,\r\n      temp: temp(currentWeatherData),\r\n      feelsLike: feelsLike(currentWeatherData),\r\n      precip: precip(currentWeatherData),\r\n      humidity: `${currentWeatherData.humidity}%`,\r\n      visibility: visibility(currentWeatherData),\r\n      windSpeed: windSpeed(currentWeatherData),\r\n      windDir: `${currentWeatherData.wind_dir}`,\r\n      windDegree: `${currentWeatherData.wind_degree}deg`,\r\n    };\r\n\r\n    return filteredDataSet;\r\n  }\r\n\r\n  #dataFilteringMethods = {\r\n    temp: (data) => {\r\n      const { temperature } = this.#unitRules;\r\n\r\n      if (temperature === \"metric\") {\r\n        return `${data.temp_c} C`;\r\n      } else if (temperature === \"customary\") {\r\n        return `${data.temp_f} F`;\r\n      }\r\n    },\r\n    windSpeed: (data) => {\r\n      const { distance } = this.#unitRules;\r\n\r\n      if (distance === \"metric\") {\r\n        return `${data.wind_kph} kph`;\r\n      } else if (distance === \"customary\") {\r\n        return `${data.wind_mph} mph`;\r\n      }\r\n    },\r\n    precip: (data) => {\r\n      const { measurement } = this.#unitRules;\r\n\r\n      if (measurement === \"metric\") {\r\n        return `${data.precip_mm} mm`;\r\n      } else if (measurement === \"customary\") {\r\n        return `${data.precip_in} in`;\r\n      }\r\n    },\r\n    feelsLike: (data) => {\r\n      const { temperature } = this.#unitRules;\r\n\r\n      if (temperature === \"metric\") {\r\n        return `${data.feelslike_c} C`;\r\n      } else if (temperature === \"customary\") {\r\n        return `${data.feelslike_f} F`;\r\n      }\r\n    },\r\n    visibility: (data) => {\r\n      const { distance } = this.#unitRules;\r\n\r\n      if (distance === \"metric\") {\r\n        return `${data.vis_km} km`;\r\n      } else if (distance === \"customary\") {\r\n        return `${data.vis_miles} mi`;\r\n      }\r\n    },\r\n  };\r\n\r\n  //------------------APIs-----------------//\r\n\r\n  filterData(data, unitRules) {\r\n    try {\r\n      this.#argValidator(\"filterData\", { data, unitRules }); //validate args\r\n\r\n      this.#applyUnitRules(unitRules); //apply the unit filtering rules to the state\r\n\r\n      const filteredDataSet = this.#createFilteredDataSet(data); //make a filtered data set\r\n\r\n      return filteredDataSet;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ForecastDataFilter {\r\n  //-----------ARGUMENT-VALIDATION---------//\r\n  #argValidationData = {\r\n    filterData: {\r\n      data: {\r\n        type: \"object\",\r\n      },\r\n      unitRules: {\r\n        type: \"object\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //----------STATE-AND-CONFIG-DATA--------//\r\n\r\n  #unitRules = null;\r\n\r\n  //------------APPLY-UNIT-RULES-----------//\r\n\r\n  #applyUnitRules(unitRules) {\r\n    this.#unitRules = unitRules;\r\n  }\r\n\r\n  //-------------DATA-FILTERING------------//\r\n\r\n  #createFilteredDataSet(data) {\r\n    const forecastDataArr = data.forecast.forecastday,\r\n      filteredForecastDataArr = [];\r\n\r\n    for (let forecastDay of forecastDataArr) {\r\n      const filteredDay = this.#filterByDay(forecastDay);\r\n\r\n      filteredForecastDataArr.push(filteredDay);\r\n    }\r\n\r\n    return filteredForecastDataArr;\r\n  }\r\n\r\n  #filterByDay(singleDayData) {\r\n    const dayDataObj = singleDayData.day,\r\n      dayDate = singleDayData.date; //define the received data sets\r\n\r\n    const { maxTemp, minTemp, totalPrecip } = this.#dataFilteringMethods; //reference the filtering methods\r\n\r\n    const filteredDayData = {\r\n      date: dayDate,\r\n      conditionText: dayDataObj.condition.text,\r\n      conditionImage: dayDataObj.condition.icon,\r\n      maxTemp: maxTemp(dayDataObj),\r\n      minTemp: minTemp(dayDataObj),\r\n      totalPrecip: totalPrecip(dayDataObj),\r\n    };\r\n\r\n    return filteredDayData;\r\n  }\r\n\r\n  #dataFilteringMethods = {\r\n    maxTemp: (dayDataObj) => {\r\n      const { temperature } = this.#unitRules;\r\n      let maxTempValue;\r\n\r\n      if (temperature === \"metric\") {\r\n        maxTempValue = `${dayDataObj.maxtemp_c} C`;\r\n      } else if (temperature === \"customary\") {\r\n        maxTempValue = `${dayDataObj.maxtemp_f} F`;\r\n      }\r\n\r\n      return maxTempValue;\r\n    },\r\n    minTemp: (dayDataObj) => {\r\n      const { temperature } = this.#unitRules;\r\n      let minTempValue;\r\n\r\n      if (temperature === \"metric\") {\r\n        minTempValue = `${dayDataObj.mintemp_c} C`;\r\n      } else if (temperature === \"customary\") {\r\n        minTempValue = `${dayDataObj.mintemp_f} F`;\r\n      }\r\n\r\n      return minTempValue;\r\n    },\r\n    totalPrecip: (dayDataObj) => {\r\n      const { measurement } = this.#unitRules;\r\n      let totalPrecip;\r\n\r\n      if (measurement === \"metric\") {\r\n        totalPrecip = `${dayDataObj.totalprecip_mm} mm`;\r\n      } else if (measurement === \"customary\") {\r\n        totalPrecip = `${dayDataObj.totalprecip_in} in`;\r\n      }\r\n\r\n      return totalPrecip;\r\n    },\r\n  };\r\n\r\n  //------------------APIs-----------------//\r\n\r\n  filterData(data, unitRules) {\r\n    try {\r\n      this.#argValidator(\"filterData\", { data, unitRules }); //validate args\r\n\r\n      this.#applyUnitRules(unitRules); //apply the unit filtering rules to the state\r\n\r\n      const filteredDataSet = this.#createFilteredDataSet(data); //make a filtered data set\r\n\r\n      return filteredDataSet;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","import { ElementRefManager } from \"../Level-0/Element-Ref-Manager\"; //dependency for various argument validation\r\n\r\nclass GeneralInfoConstructor {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //save helper class instance\r\n\r\n      this.#createGeneralInfoElement(); //create the entire general info fragment\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                       received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                        needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                       received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n                     corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //---------------------CLASS-AND-CONFIG-DATA--------------------//\r\n\r\n  #generalIdentifiers = {\r\n    general: `General-Info`,\r\n  };\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #generalInfoElement = null;\r\n\r\n  //-------------------ELEMENT-REFERENCE-CACHING------------------//\r\n\r\n  #storeElementRef(identifier, element) {\r\n    this.#helperClasses.elementReferenceManager.addRef(identifier, element);\r\n  }\r\n\r\n  //------------------------HELPER-METHODS------------------------//\r\n\r\n  #createGeneralInfoElement() {\r\n    const { main } = this.#containerElementConstructors,\r\n      { location } = this.#generalInfoElementConstructors;\r\n\r\n    //create all of the necessary elements to create the general info fragment\r\n    const mainContainerElement = main(),\r\n      childElements = {\r\n        location: location(),\r\n      };\r\n\r\n    //append the child elements to the container\r\n    for (let element in childElements) {\r\n      mainContainerElement.append(childElements[element]);\r\n    }\r\n\r\n    this.#generalInfoElement = mainContainerElement; //save completely constructed and assembled general info element to state\r\n  }\r\n\r\n  //----------------------ELEMENT-CONSTRUCTORS--------------------//\r\n\r\n  #containerElementConstructors = {\r\n    main: () => {\r\n      const mainContainerElement = document.createElement(\"div\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Main-Container`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      mainContainerElement.classList.add(generalIdentifier);\r\n      mainContainerElement.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, mainContainerElement); //General-Info-Main-Container\r\n\r\n      return mainContainerElement;\r\n    },\r\n  };\r\n\r\n  #generalInfoElementConstructors = {\r\n    location: () => {\r\n      const locationElement = document.createElement(\"h3\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Location`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      locationElement.classList.add(generalIdentifier);\r\n      locationElement.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, locationElement); //General-Info-Location\r\n\r\n      return locationElement;\r\n    },\r\n  };\r\n\r\n  //-----------------------------APIs-----------------------------//\r\n\r\n  returnGeneralInfoFragment() {\r\n    try {\r\n      return this.#generalInfoElement;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n} // constructs the portion of the app that holds the general information, such as location and current time\r\n\r\nclass CurrentWeatherConstuctor {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //save helper class instance\r\n\r\n      this.#createCurrentWeatherFragment(); //create the entire fragment, and save the product to state\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                       received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                        needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                       received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n                     corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //----------------------STATE-AND-CONFIG-DATA-----------------------//\r\n\r\n  #generalIdentifiers = {\r\n    general: `Current-Weather`,\r\n  };\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #currentWeatherElement = null;\r\n\r\n  //-------------------------ELEMENT-CACHING--------------------------//\r\n\r\n  #storeElementRef(identifier, element) {\r\n    this.#helperClasses.elementReferenceManager.addRef(identifier, element);\r\n  }\r\n\r\n  //--------------------------HELPER-METHODS--------------------------//\r\n\r\n  #createCurrentWeatherFragment() {\r\n    const { main } = this.#containerConstructors,\r\n      {\r\n        conditionText,\r\n        temp,\r\n        tempFeelsLike,\r\n        precip,\r\n        humidity,\r\n        visibility,\r\n        windDegree,\r\n        windDirection,\r\n        windSpeed,\r\n      } = this.#currentWeatherElementConstructors,\r\n      mainContainerElement = main(); //create the main container to append the various child elements to\r\n\r\n    //define the order to create and append the corresponding elements within the\r\n    //main container\r\n    const createAndAppendOrder = [\r\n      conditionText,\r\n      temp,\r\n      tempFeelsLike,\r\n      precip,\r\n      humidity,\r\n      visibility,\r\n      windDirection,\r\n      windDegree,\r\n      windSpeed,\r\n    ];\r\n\r\n    //create and append each imported method that represents a specific data display element,\r\n    //follows the order of the defined array\r\n    createAndAppendOrder.forEach((method) => {\r\n      const element = method();\r\n      mainContainerElement.append(element);\r\n    });\r\n\r\n    this.#currentWeatherElement = mainContainerElement; //save the complete current weather fragment to state\r\n  }\r\n\r\n  //------------------------ELEMENT-CONSTRUCTORS----------------------//\r\n\r\n  #containerConstructors = {\r\n    main: () => {\r\n      const currentWeatherContainerElement = document.createElement(\"div\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Main-Container`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      currentWeatherContainerElement.classList.add(generalIdentifier);\r\n      currentWeatherContainerElement.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, currentWeatherContainerElement);\r\n\r\n      return currentWeatherContainerElement;\r\n    },\r\n  };\r\n\r\n  #currentWeatherElementConstructors = {\r\n    conditionText: () => {\r\n      const conditionTextField = document.createElement(\"h1\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Condition-Text`,\r\n        combinedIdentifier = generalIdentifier + \"-\" + specificIdentifier;\r\n\r\n      conditionTextField.classList.add(generalIdentifier);\r\n      conditionTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, conditionTextField); //Current-Weather-Condition-Text\r\n\r\n      return conditionTextField;\r\n    }, //will say a phrase like 'partly cloudly' or 'sunny' etc to represent the weather\r\n    temp: () => {\r\n      const tempTextField = document.createElement(\"h1\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Temp`,\r\n        combinedIdentifier = generalIdentifier + \"-\" + specificIdentifier;\r\n\r\n      tempTextField.classList.add(generalIdentifier);\r\n      tempTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, tempTextField); //Current-Weather-Temp\r\n\r\n      return tempTextField;\r\n    }, //actual temp\r\n    tempFeelsLike: () => {\r\n      const feelsLikeTempTextField = document.createElement(\"h2\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Feels-Like-Temp`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      feelsLikeTempTextField.classList.add(generalIdentifier);\r\n      feelsLikeTempTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, feelsLikeTempTextField); //Current-Weather-Feels-Like-Temp\r\n\r\n      return feelsLikeTempTextField;\r\n    }, //what it feels like\r\n    precip: () => {\r\n      const precipTextField = document.createElement(\"h2\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Precip`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      precipTextField.classList.add(generalIdentifier);\r\n      precipTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, precipTextField); //Current-Weather-Precip\r\n\r\n      return precipTextField;\r\n    }, //amount of precipitation\r\n    humidity: () => {\r\n      const humidityTextField = document.createElement(\"h2\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Humidity`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      humidityTextField.classList.add(generalIdentifier);\r\n      humidityTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, humidityTextField); //Current-Weather-Humidity\r\n\r\n      return humidityTextField;\r\n    }, //how humid the air is\r\n    visibility: () => {\r\n      const visibilityTextField = document.createElement(\"h3\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Visibility`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      visibilityTextField.classList.add(generalIdentifier);\r\n      visibilityTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, visibilityTextField); //Current-Weather-Visibility\r\n\r\n      return visibilityTextField;\r\n    }, //length of visibility through the sky\r\n    windDegree: () => {\r\n      const windDegreeTextField = document.createElement(\"h3\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Wind-Degree`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      windDegreeTextField.classList.add(generalIdentifier);\r\n      windDegreeTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, windDegreeTextField); //Current-Weather-Wind-Degree\r\n\r\n      return windDegreeTextField;\r\n    }, //wind direction in degrees\r\n    windDirection: () => {\r\n      const windDirectionTextField = document.createElement(\"h3\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Wind-Direction`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      windDirectionTextField.classList.add(generalIdentifier);\r\n      windDirectionTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, windDirectionTextField); //Current-Weather-Wind-Direction\r\n\r\n      return windDirectionTextField;\r\n    }, //wind direction in compass units\r\n    windSpeed: () => {\r\n      const windSpeedTextField = document.createElement(\"h3\"),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Wind-Speed`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      windSpeedTextField.classList.add(generalIdentifier);\r\n      windSpeedTextField.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, windSpeedTextField); //Current-Weather-Wind-Speed\r\n\r\n      return windSpeedTextField;\r\n    }, //how fast the wind is moving\r\n  };\r\n\r\n  //---------------------------APIs------------------------//\r\n\r\n  returnCurrentWeatherFragment() {\r\n    try {\r\n      return this.#currentWeatherElement;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n} // constructs the portion of the app that holds the current weather information based on location\r\n\r\nclass ForecastConstructor {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //store helper class instance\r\n\r\n      this.#createForecastFragment(); //create the entire fragment and store it into the state\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                       received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                        needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                       received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n                     corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //--------------------STATE-AND-CONFIG-DATA---------------------//\r\n\r\n  #generalIdentifiers = {\r\n    dayCardElements: `Forecast-Day`,\r\n    generalElements: `Forecast`,\r\n  };\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #forecastElement = null;\r\n\r\n  //----------------------ELEMENT-CACHING-------------------------//\r\n\r\n  #storeElementRef(identifier, element) {\r\n    this.#helperClasses.elementReferenceManager.addRef(identifier, element);\r\n  }\r\n\r\n  //-----------------------HELPER-METHODS-------------------------//\r\n\r\n  #createForecastFragment() {\r\n    //create the main container that will hold all of the day cards\r\n    const { mainContainer } = this.#containerConstructors,\r\n      mainContainerElement = mainContainer();\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      const dayCard = this.#createDayCard(`Day-${i+1}`); //create a day card corresponding to the day, this way each created day card element has something unique attached to them\r\n\r\n      mainContainerElement.append(dayCard);\r\n    }\r\n\r\n    this.#forecastElement = mainContainerElement; //set the completely assembled forecast element to the state\r\n  } //will construct and assemble all of the necessary cards and containers to create the entire fragment\r\n\r\n  #createDayCard(dayNumString) {\r\n    const {\r\n        dayDate,\r\n        conditionText,\r\n        conditionImage,\r\n        tempHigh,\r\n        tempLow,\r\n        totalPrecip,\r\n      } = this.#dayCardElementConstructors,\r\n      { dayCardContainer } = this.#containerConstructors;\r\n\r\n    //create all of the necessary elements that make up a single day card\r\n    const dayCardContainerElement = dayCardContainer(dayNumString),\r\n      dayCardChildElements = {\r\n        date: dayDate(dayNumString),\r\n        conditionText: conditionText(dayNumString),\r\n        conditionImage: conditionImage(dayNumString),\r\n        tempHigh: tempHigh(dayNumString),\r\n        tempLow: tempLow(dayNumString),\r\n        totalPrecip: totalPrecip(dayNumString),\r\n      }; //all of the child elements of the day card container, will be appended in this order\r\n\r\n    //append the child elements to the container\r\n    for (let element in dayCardChildElements) {\r\n      dayCardContainerElement.append(dayCardChildElements[element]);\r\n    }\r\n\r\n    return dayCardContainerElement; //return the assembled day card template\r\n  } //will construct and assemble individual day cards\r\n\r\n  //---------------------ELEMENT-CONSTRUCTORS---------------------//\r\n\r\n  #containerConstructors = {\r\n    mainContainer: () => {\r\n      const mainContainerElement = document.createElement(\"div\"),\r\n        generalIdentifier = this.#generalIdentifiers.generalElements,\r\n        specificIdentifier = `Main-Container`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      mainContainerElement.classList.add(generalIdentifier);\r\n      mainContainerElement.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, mainContainerElement); //Forecast-Main-Container\r\n\r\n      return mainContainerElement;\r\n    }, //the container that contains the entire forecast, including the day containers\r\n    dayCardContainer: (dayNumString) => {\r\n      const dayContainerElement = document.createElement(\"div\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Card-Container`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      dayContainerElement.classList.add(generalIdentifier);\r\n      dayContainerElement.classList.add(specificIdentifier);\r\n      dayContainerElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, dayContainerElement); //Forecast-Day-Card-Container-Day-${number}\r\n\r\n      return dayContainerElement;\r\n    }, //will represent a single way within the forecast\r\n  };\r\n\r\n  #dayCardElementConstructors = {\r\n    dayDate: (dayNumString) => {\r\n      const dayDateTextElement = document.createElement(\"p\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Date`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      dayDateTextElement.classList.add(generalIdentifier);\r\n      dayDateTextElement.classList.add(specificIdentifier);\r\n      dayDateTextElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, dayDateTextElement); //Forecast-Day-Date-Day-${number}\r\n\r\n      return dayDateTextElement;\r\n    },\r\n    conditionText: (dayNumString) => {\r\n      const conditionTextElement = document.createElement(\"p\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Condition-Text`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      conditionTextElement.classList.add(generalIdentifier);\r\n      conditionTextElement.classList.add(specificIdentifier);\r\n      conditionTextElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, conditionTextElement); //Forecast-Day-Condition-Text-Day-${number}\r\n\r\n      return conditionTextElement;\r\n    }, //will say a phrase like 'partly cloudly' or 'sunny' etc to represent the weather for a given day\r\n    conditionImage: (dayNumString) => {\r\n      const conditionImageElement = document.createElement(\"img\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Condition-Image`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      conditionImageElement.classList.add(generalIdentifier);\r\n      conditionImageElement.classList.add(specificIdentifier);\r\n      conditionImageElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, conditionImageElement); //Forecast-Day-Condition-Image-Day-${number}\r\n\r\n      return conditionImageElement;\r\n    }, //holds an image that will match the condition text phrase within a corresponding day container\r\n    tempHigh: (dayNumString) => {\r\n      const tempHighElement = document.createElement(\"p\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Temp-High`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      tempHighElement.classList.add(generalIdentifier);\r\n      tempHighElement.classList.add(specificIdentifier);\r\n      tempHighElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, tempHighElement); //Forecast-Day-Temp-High-Day-${number}\r\n\r\n      return tempHighElement;\r\n    }, //the predicted high temp for a given forecast day\r\n    tempLow: (dayNumString) => {\r\n      const tempLowElement = document.createElement(\"p\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Temp-Low`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      tempLowElement.classList.add(generalIdentifier);\r\n      tempLowElement.classList.add(specificIdentifier);\r\n      tempLowElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, tempLowElement); //Forecast-Day-Temp-Low-Day-${number}\r\n\r\n      return tempLowElement;\r\n    }, //the predicted low temp for a given forecast day\r\n    totalPrecip: (dayNumString) => {\r\n      const totalPrecipElement = document.createElement(\"p\"),\r\n        generalIdentifier = this.#generalIdentifiers.dayCardElements,\r\n        specificIdentifier = `Total-Precip`,\r\n        combinedIdentifier =\r\n          generalIdentifier + `-` + specificIdentifier + `-` + dayNumString;\r\n\r\n      totalPrecipElement.classList.add(generalIdentifier);\r\n      totalPrecipElement.classList.add(specificIdentifier);\r\n      totalPrecipElement.classList.add(dayNumString);\r\n\r\n      this.#storeElementRef(combinedIdentifier, totalPrecipElement); //Forecast-Day-Total-Precip-Day-${number}\r\n\r\n      return totalPrecipElement;\r\n    }, //the predicted amount of precipitation for a given forecast day\r\n  };\r\n\r\n  //----------------------------APIs------------------------------//\r\n\r\n  returnForecastFragment() {\r\n    try {\r\n      return this.#forecastElement;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n} // constructs the portion of the app that holds the forecast based on the location\r\n\r\nclass UserInterfaceConstructor {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate the args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //store the helper class instance to the state\r\n\r\n      this.#createUserInterfaceFragment(); //create the entire fragment, which its saved to the state\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                   received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                    needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                   received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n                 corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------------STATE-AND-CONFIG-DATA----------------------//\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #generalIdentifiers = {\r\n    buttons: `User-Interface-Buttons`,\r\n    containers: `User-Interface-Containers`,\r\n  };\r\n\r\n  #userInterfaceElement = null;\r\n\r\n  //------------------ELEMENT-REFERENCE-CACHING-----------------//\r\n\r\n  #storeElementRef(identifier, element) {\r\n    this.#helperClasses.elementReferenceManager.addRef(identifier, element);\r\n  }\r\n\r\n  //---------------------HELPER-METHODS--------------------------//\r\n\r\n  //orchestrates the entire creation of the user interface fragment\r\n  #createUserInterfaceFragment() {\r\n    const { main } = this.#containers,\r\n      { toggleButtons } = this.#sectionConstructors;\r\n\r\n    const userInterfaceContainer = main(), //create the main container, as well as the constructed section for toggle buttons\r\n      toggleButtonsSection = toggleButtons();\r\n\r\n    userInterfaceContainer.append(toggleButtonsSection);\r\n\r\n    this.#userInterfaceElement = userInterfaceContainer; //save the completely assembled user interface fragment to state\r\n  }\r\n\r\n  //-------------------ELEMENT-CONSTRUCTORS----------------------//\r\n\r\n  #sectionConstructors = {\r\n    toggleButtons: () => {\r\n      const { button } = this.#containers,\r\n        { toggleTempUnit, toggleDistanceUnit, toggleMeasurementUnit } =\r\n          this.#buttons;\r\n\r\n      const buttonContainer = button(),\r\n        buttonElements = {\r\n          toggleTempUnit: toggleTempUnit(),\r\n          toggleDistanceUnit: toggleDistanceUnit(),\r\n          toggleMeasurementUnit: toggleMeasurementUnit(),\r\n        }; //create the container and all of the individual buttons\r\n\r\n      //append all of the buttons to the container\r\n      for (let button in buttonElements) {\r\n        buttonContainer.append(buttonElements[button]);\r\n      }\r\n\r\n      return buttonContainer; //return the assembled button container\r\n    },\r\n  };\r\n\r\n  #containers = {\r\n    main: () => {\r\n      const mainContainer = document.createElement(\"div\"),\r\n        generalIdentifier = this.#generalIdentifiers.containers,\r\n        specificIdentifier = `Main-Container`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      mainContainer.classList.add(generalIdentifier);\r\n      mainContainer.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, mainContainer); //User-Interface-Containers-Main-Container\r\n\r\n      return mainContainer;\r\n    },\r\n    button: () => {\r\n      const buttonContainer = document.createElement(\"div\"),\r\n        generalIdentifier = this.#generalIdentifiers.containers,\r\n        specificIdentifier = `Button-Container`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      buttonContainer.classList.add(generalIdentifier);\r\n      buttonContainer.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, buttonContainer); //User-Interface-Containers-Button-Container\r\n\r\n      return buttonContainer;\r\n    },\r\n  };\r\n\r\n  #buttons = {\r\n    toggleTempUnit: () => {\r\n      const tempToggleButton = document.createElement(\"button\"),\r\n        generalIdentifier = this.#generalIdentifiers.buttons,\r\n        specificIdentifier = `Temp-Toggle`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      tempToggleButton.classList.add(generalIdentifier);\r\n      tempToggleButton.classList.add(specificIdentifier);\r\n\r\n      tempToggleButton.textContent = \"Temperature\";\r\n\r\n      this.#storeElementRef(combinedIdentifier, tempToggleButton); //User-Interface-Buttons-Temp-Toggle\r\n\r\n      return tempToggleButton;\r\n    }, //F or C\r\n    toggleDistanceUnit: () => {\r\n      const distanceToggleButton = document.createElement(\"button\"),\r\n        generalIdentifier = this.#generalIdentifiers.buttons,\r\n        specificIdentifier = `Distance-Toggle`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      distanceToggleButton.classList.add(generalIdentifier);\r\n      distanceToggleButton.classList.add(specificIdentifier);\r\n\r\n      distanceToggleButton.textContent = \"Distance\";\r\n\r\n      this.#storeElementRef(combinedIdentifier, distanceToggleButton); //User-Interface-Buttons-Distance-Toggle\r\n\r\n      return distanceToggleButton;\r\n    }, //km or mi\r\n    toggleMeasurementUnit: () => {\r\n      const measurementToggleButton = document.createElement(\"button\"),\r\n        generalIdentifier = this.#generalIdentifiers.buttons,\r\n        specificIdentifier = `Measurement-Toggle`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      measurementToggleButton.classList.add(generalIdentifier);\r\n      measurementToggleButton.classList.add(specificIdentifier);\r\n\r\n      measurementToggleButton.textContent = \"Measurement\";\r\n\r\n      this.#storeElementRef(combinedIdentifier, measurementToggleButton); //User-Interface-Buttons-Measurement-Toggle\r\n\r\n      return measurementToggleButton;\r\n    }, //mm or in\r\n  };\r\n\r\n  //------------------------APIs----------------------------//\r\n\r\n  returnUserInterfaceFragment() {\r\n    try {\r\n      return this.#userInterfaceElement; //return the entire user interface fragment completely constructed and assembled\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n} // constructs the portion of the app that holds the user interface, such as the location search bar, and the unit toggle buttons\r\n\r\nexport class WeatherAppConstructor {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate the args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //save the element reference manager instance\r\n\r\n      this.#createWeatherAppFragment(); //create the entire weather app web page fragment, in which its stored in state for later retrieval\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                 received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                  needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                 received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n               corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------------STATE-AND-CONFIG-DATA-----------------//\r\n\r\n  #generalIdentifiers = {\r\n    general: `Weather-App`,\r\n  };\r\n\r\n  #fragments = {\r\n    generalInfo: null,\r\n    currentWeather: null,\r\n    userInterface: null,\r\n    forecast: null,\r\n  };\r\n\r\n  //holds the entirely constructed and assembled weather app essentially,\r\n  //will be returned by the api of this class\r\n  #completeWeatherAppElement = null;\r\n\r\n  //cache to store element references within, in which the functionality class will use the\r\n  //same reference manager instance to apply functionality to\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  //----------------ELEMENT-REFERENCE-CACHING---------------//\r\n\r\n  #storeElementRef(identifier, element) {\r\n    this.#helperClasses.elementReferenceManager.addRef(identifier, element);\r\n  }\r\n\r\n  //------------------CREATE-ENTIRE-WEB-PAGE----------------//\r\n\r\n  #createWeatherAppFragment() {\r\n    this.#createSubFragments(); //create all of the necessary sub fragmentsd\r\n\r\n    const { main } = this.#containers,\r\n      mainContainerElement = main();\r\n\r\n    //fetch all of the previously created fragments from state\r\n    const { generalInfo, currentWeather, userInterface, forecast } =\r\n      this.#fragments;\r\n\r\n    //append them to the main container in this order\r\n    [generalInfo, currentWeather, userInterface, forecast].forEach((fragment) =>\r\n      mainContainerElement.append(fragment)\r\n    );\r\n\r\n    this.#completeWeatherAppElement = mainContainerElement; //store the completely constructed and assembled weather app page to state\r\n  }\r\n\r\n  //will orchestrate the entire creation of the weather app page\r\n  #createSubFragments() {\r\n    const { generalInfo, currentWeather, userInterface, forecast } =\r\n      this.#fragmentCreation; //get all of the necessary fragment creation methods\r\n\r\n    //create each fragment and store it in state\r\n    [generalInfo, currentWeather, userInterface, forecast].forEach((method) => {\r\n      method();\r\n    });\r\n  }\r\n\r\n  //-------------------ELEMENT-CONSTRUCTORS-----------------//\r\n\r\n  #containers = {\r\n    main: () => {\r\n      const weatherAppContainer = document.createElement(`div`),\r\n        generalIdentifier = this.#generalIdentifiers.general,\r\n        specificIdentifier = `Main-Container`,\r\n        combinedIdentifier = generalIdentifier + `-` + specificIdentifier;\r\n\r\n      weatherAppContainer.classList.add(generalIdentifier);\r\n      weatherAppContainer.classList.add(specificIdentifier);\r\n\r\n      this.#storeElementRef(combinedIdentifier, weatherAppContainer); //Weather-App-Main-Container\r\n\r\n      return weatherAppContainer;\r\n    },\r\n  };\r\n\r\n  //--------------------FRAGMENT-CREATION-------------------//\r\n\r\n  //methods to create fragments of the weather app\r\n  //page, in which they will all be supplied the same\r\n  //element reference manager instance, so every\r\n  //single element made will be on the same cache.\r\n  //these methods will use the helper classes to\r\n  //facilitate the creation\r\n  #fragmentCreation = {\r\n    generalInfo: () => {\r\n      const { elementReferenceManager } = this.#helperClasses,\r\n        generalInfoConstructorInstance = new GeneralInfoConstructor(\r\n          elementReferenceManager\r\n        ); // make the corresponding fragment construtor instance, supply it the reference manager instance that was supplied before\r\n\r\n      this.#fragments.generalInfo =\r\n        generalInfoConstructorInstance.returnGeneralInfoFragment(); //return the fragment and store it in the controller state\r\n    },\r\n    currentWeather: () => {\r\n      const { elementReferenceManager } = this.#helperClasses,\r\n        currentWeatherConstructorInstance = new CurrentWeatherConstuctor(\r\n          elementReferenceManager\r\n        );\r\n\r\n      this.#fragments.currentWeather =\r\n        currentWeatherConstructorInstance.returnCurrentWeatherFragment();\r\n    },\r\n    userInterface: () => {\r\n      const { elementReferenceManager } = this.#helperClasses,\r\n        userInterfaceConstructorInstance = new UserInterfaceConstructor(\r\n          elementReferenceManager\r\n        );\r\n\r\n      this.#fragments.userInterface =\r\n        userInterfaceConstructorInstance.returnUserInterfaceFragment();\r\n    },\r\n    forecast: () => {\r\n      const { elementReferenceManager } = this.#helperClasses,\r\n        forecastConstructorInstance = new ForecastConstructor(\r\n          elementReferenceManager\r\n        );\r\n\r\n      this.#fragments.forecast =\r\n        forecastConstructorInstance.returnForecastFragment();\r\n    },\r\n  };\r\n\r\n  //--------------------------APIs--------------------------//\r\n\r\n  returnWeatherAppFragment() {\r\n    try {\r\n      return this.#completeWeatherAppElement;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  } //will return the entire weather app fragment that was created\r\n} //uses the helper classes in order to combined all of the made fragments to create an entire web page for the weather app\r\n","import { ElementRefManager } from \"../Level-0/Element-Ref-Manager\";\r\n\r\nimport {\r\n  GeneralInfoDataFilter,\r\n  CurrentWeatherDataFilter,\r\n  ForecastDataFilter,\r\n} from \"../Level-1/Weather-Data-Filtering\";\r\n\r\nimport {\r\n  ApplyGeneralInfoData,\r\n  ApplyCurrentWeatherData,\r\n  ApplyForecastData,\r\n} from \"../Level-1/Weather-Data-DOM-Updating\";\r\n\r\n//controls the user interface portion of the web app,\r\n//so that the supplied buttons will toggle the units being used for existing\r\n//data sets\r\nclass UserInterfaceFunctionality {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager });\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager;\r\n\r\n      this.#getElementRefs();\r\n\r\n      this.#addFunctionalityToButtons();\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n  //--------------ARGUMENT-VALIDATION------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n    subscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n      entryPointMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    unsubscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n               received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n               received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n             corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------STATE-AND-CONFIG-DATA------------//\r\n\r\n  #elementReferences = {\r\n    unitToggleButtonContainer: null,\r\n    toggleDistance: null,\r\n    toggleMeasurement: null,\r\n    toggleTemperature: null,\r\n  };\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n  };\r\n\r\n  #stateData = {\r\n    eventListenersOn: false,\r\n  };\r\n\r\n  //----------------HELPER-METHODS---------------//\r\n\r\n  #getElementRefs() {\r\n    const { elementReferenceManager } = this.#helperClasses;\r\n\r\n    this.#elementReferences.unitToggleButtonContainer =\r\n      elementReferenceManager.retrieveRef(\r\n        `User-Interface-Containers-Button-Container`\r\n      ); // get ref for the container for the buttons\r\n\r\n    this.#elementReferences.toggleDistance =\r\n      elementReferenceManager.retrieveRef(\r\n        `User-Interface-Buttons-Distance-Toggle`\r\n      ); // get ref for the distance unit toggle button\r\n\r\n    this.#elementReferences.toggleMeasurement =\r\n      elementReferenceManager.retrieveRef(\r\n        `User-Interface-Buttons-Measurement-Toggle`\r\n      ); // get ref for the measurement unit toggle button\r\n\r\n    this.#elementReferences.toggleTemperature =\r\n      elementReferenceManager.retrieveRef(`User-Interface-Buttons-Temp-Toggle`);\r\n    // get ref for the temperature unit toggle button\r\n  }\r\n\r\n  #addFunctionalityToButtons() {\r\n    this.#addEventListeners();\r\n    //the functionality is mainly through appending the event listener with the\r\n    //associated functionality supplied as the callback, atleast this way this provides an\r\n    //easy way to add additional functionality in the future\r\n  }\r\n\r\n  //---------EVENT-LISTENER-INITIALIZATION-------//\r\n\r\n  #addEventListeners() {\r\n    if (!this.#stateData.eventListenersOn) {\r\n      const { unitToggleButtonContainer } = this.#elementReferences; //get the ref for the button container\r\n\r\n      unitToggleButtonContainer.addEventListener(\"click\", (e) => {\r\n        this.#clickFunctionality(e);\r\n      }); //append the event listener to said container\r\n\r\n      this.#stateData.eventListenersOn = true; //change the class state to reflect the event listener being initialized\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to add event listeners, as they appear to already be initialized`\r\n      );\r\n    }\r\n  } //initializes the event listeners needed to the corresponding element, that being the button container on the UI\r\n\r\n  //---------EVENT-LISTENER-FUNCTIONALITY--------//\r\n\r\n  #clickFunctionality(event) {\r\n    const buttonClicked = this.#determineButtonClicked(event); //find out which button was clicked, and return a string representing it\r\n\r\n    this.#emitButtonClicked(buttonClicked); //emit the returned string\r\n  } //supplied to the created event listener\r\n\r\n  #determineButtonClicked(event) {\r\n    const { toggleDistance, toggleMeasurement, toggleTemperature } =\r\n      this.#elementReferences;\r\n\r\n    switch (event.target) {\r\n      case toggleDistance:\r\n        return `Toggle Distance Unit`;\r\n      case toggleMeasurement:\r\n        return `Toggle Measurement Unit`;\r\n      case toggleTemperature:\r\n        return `Toggle Temperature Unit`;\r\n    }\r\n  } //will be used within click functionality\r\n\r\n  //------------BUTTON-CLICKED-PUB-SUB-----------//\r\n\r\n  #emitButtonClicked(buttonClicked) {\r\n    const numOfSubscribers = Object.keys(this.#subscribers).length;\r\n\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#subscribers) {\r\n        this.#subscribers[subscriber](buttonClicked);\r\n      }\r\n    }\r\n  }\r\n\r\n  #subscribers = {};\r\n\r\n  subscribe(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribe\", { subName, entryPointMethod });\r\n\r\n      if (!this.#subscribers.hasOwnProperty(subName)) {\r\n        this.#subscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to add a subscriber to the weather app user interface publisher, as the\r\n           subscriber seems to already exist, received '${subName}' as the subscriber being added`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  unsubscribe(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribe\", { subName });\r\n\r\n      if (this.#subscribers.hasOwnProperty(subName)) {\r\n        delete this.#subscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to remove a subscriber from the weather app user interface publisher, as the\r\n           subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\n//receives data, filters it, and packages the right data to be\r\n//sent to the right helper class to render\r\nclass WeatherDataManager {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //store the ref manager instance to state\r\n\r\n      this.#initHelperClasses(); //create unique instances of the helper classes being used, particularly the data application helpers\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------ARGUMENT-VALIDATION-----------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n    unitButtonEntryPoint: {\r\n      buttonClicked: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n    weatherDataEntryPoint: {\r\n      data: {\r\n        type: \"object\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n               received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n               received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n             corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //----------STATE-AND-CONFIG-DATA-----------//\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n    applyForecastData: null,\r\n    applyCurrentWeatherData: null,\r\n    applyGeneralInfoData: null,\r\n    generalInfoDataFilter: null,\r\n    currentWeatherDataFilter: null,\r\n    forecastDataFilter: null,\r\n  };\r\n\r\n  #selectedUnits = {\r\n    distance: \"metric\",\r\n    temperature: \"metric\",\r\n    measurement: \"metric\",\r\n  };\r\n\r\n  #currentWeatherData = null;\r\n\r\n  //--------------HELPER-METHODS--------------//\r\n\r\n  #initHelperClasses() {\r\n    this.#initApplyDataHelperClasses();\r\n    this.#initDataFilterHelperClasses();\r\n  }\r\n\r\n  #initApplyDataHelperClasses() {\r\n    //init the data application classes with the supplied\r\n    //element reference manager as the dependencies\r\n    this.#helperClasses.applyForecastData = new ApplyForecastData(\r\n      this.#helperClasses.elementReferenceManager\r\n    );\r\n\r\n    this.#helperClasses.applyCurrentWeatherData = new ApplyCurrentWeatherData(\r\n      this.#helperClasses.elementReferenceManager\r\n    );\r\n\r\n    this.#helperClasses.applyGeneralInfoData = new ApplyGeneralInfoData(\r\n      this.#helperClasses.elementReferenceManager\r\n    );\r\n  }\r\n\r\n  #initDataFilterHelperClasses() {\r\n    //init the classes that will take a data set and filter it out\r\n    //and return a final data set based on the supplied unit rules\r\n    this.#helperClasses.generalInfoDataFilter = new GeneralInfoDataFilter();\r\n\r\n    this.#helperClasses.currentWeatherDataFilter =\r\n      new CurrentWeatherDataFilter();\r\n\r\n    this.#helperClasses.forecastDataFilter = new ForecastDataFilter();\r\n  }\r\n\r\n  #storeReceivedDataToState(data) {\r\n    this.#currentWeatherData = data;\r\n  }\r\n\r\n  //defines whether to use inbound weather data,\r\n  //or to use already stored data essentially\r\n  #processWeatherData(useInboundData, data) {\r\n    let filteredDataSet = null;\r\n\r\n    if (useInboundData) {\r\n      this.#storeReceivedDataToState(data); //store the data in state first\r\n\r\n      filteredDataSet = this.#filterInboundData(data);\r\n    } else {\r\n      filteredDataSet = this.#filterExistingData();\r\n    }\r\n\r\n    this.#emitDataToHelpers(filteredDataSet);\r\n  }\r\n\r\n  //------FILTERED-WEATHER-DATA-EMISSION-------//\r\n\r\n  #emitDataToHelpers(data) {\r\n    const { generalInfo, currentWeather, forecast } =\r\n      this.#emitDataToHelpersMethods;\r\n\r\n    generalInfo(data.generalInfo);\r\n    currentWeather(data.currentWeather);\r\n    forecast(data.forecast);\r\n  }\r\n\r\n  #emitDataToHelpersMethods = {\r\n    generalInfo: (data) => {\r\n      const { applyGeneralInfoData } = this.#helperClasses;\r\n\r\n      applyGeneralInfoData.applyData(data);\r\n    },\r\n    currentWeather: (data) => {\r\n      const { applyCurrentWeatherData } = this.#helperClasses;\r\n\r\n      applyCurrentWeatherData.applyData(data);\r\n    },\r\n    forecast: (data) => {\r\n      const { applyForecastData } = this.#helperClasses;\r\n\r\n      applyForecastData.applyData(data);\r\n    },\r\n  };\r\n\r\n  //----------WEATHER-DATA-FILTERING-----------//\r\n\r\n  //the filtering will use rules from the\r\n  //state to decide what to filter for\r\n  #filterInboundData(data) {\r\n    const { generalInfo, currentWeather, forecast } =\r\n      this.#sectionDataFiltering;\r\n\r\n    const filteredDataSet = {\r\n      generalInfo: generalInfo(data),\r\n      currentWeather: currentWeather(data),\r\n      forecast: forecast(data),\r\n    };\r\n\r\n    return filteredDataSet;\r\n  }\r\n\r\n  #filterExistingData() {\r\n    const { generalInfo, currentWeather, forecast } =\r\n        this.#sectionDataFiltering,\r\n      data = this.#currentWeatherData;\r\n\r\n    const filteredDataSet = {\r\n      generalInfo: generalInfo(data),\r\n      currentWeather: currentWeather(data),\r\n      forecast: forecast(data),\r\n    };\r\n\r\n    return filteredDataSet;\r\n  }\r\n\r\n  //will use the data filtering methods to choose the right\r\n  //data to use corresponding to the section\r\n  #sectionDataFiltering = {\r\n    generalInfo: (data) => {\r\n      const { generalInfoDataFilter } = this.#helperClasses,\r\n        filteredData = generalInfoDataFilter.filterData(data); //doesn't use the units rule\r\n\r\n      return filteredData;\r\n    },\r\n    currentWeather: (data) => {\r\n      const { currentWeatherDataFilter } = this.#helperClasses,\r\n        filteredData = currentWeatherDataFilter.filterData(\r\n          data,\r\n          this.#selectedUnits\r\n        );\r\n\r\n      return filteredData;\r\n    },\r\n    forecast: (data) => {\r\n      const { forecastDataFilter } = this.#helperClasses,\r\n        filteredData = forecastDataFilter.filterData(data, this.#selectedUnits);\r\n\r\n      return filteredData;\r\n    },\r\n  };\r\n\r\n  //---------------UNIT-TOGGLING--------------//\r\n\r\n  #toggleUnit(buttonClicked) {\r\n    const { distance, temperature, measurement } = this.#unitTogglers;\r\n\r\n    switch (buttonClicked) {\r\n      case `Toggle Distance Unit`:\r\n        distance();\r\n        break;\r\n      case `Toggle Temperature Unit`:\r\n        temperature();\r\n        break;\r\n      case `Toggle Measurement Unit`:\r\n        measurement();\r\n        break;\r\n      default:\r\n        throw new ReferenceError(\r\n          `Failed to toggle a specific unit, the received button clicked was not recognized, received ${buttonClicked}`\r\n        );\r\n    }\r\n  }\r\n\r\n  //methods to toggle the value of the various units within\r\n  //state, so that the correct data is display on the DOM\r\n  #unitTogglers = {\r\n    distance: () => {\r\n      if (this.#selectedUnits.distance === \"metric\") {\r\n        this.#selectedUnits.distance = \"customary\";\r\n      } else if (this.#selectedUnits.distance === \"customary\") {\r\n        this.#selectedUnits.distance = \"metric\";\r\n      }\r\n    },\r\n    temperature: () => {\r\n      if (this.#selectedUnits.temperature === \"metric\") {\r\n        this.#selectedUnits.temperature = \"customary\";\r\n      } else if (this.#selectedUnits.temperature === \"customary\") {\r\n        this.#selectedUnits.temperature = \"metric\";\r\n      }\r\n    },\r\n    measurement: () => {\r\n      if (this.#selectedUnits.measurement === \"metric\") {\r\n        this.#selectedUnits.measurement = \"customary\";\r\n      } else if (this.#selectedUnits.measurement === \"customary\") {\r\n        this.#selectedUnits.measurement = \"metric\";\r\n      }\r\n    },\r\n  };\r\n\r\n  //-------------------APIs-------------------//\r\n\r\n  unitButtonEntryPoint(buttonClicked) {\r\n    try {\r\n      this.#argValidator(\"unitButtonEntryPoint\", { buttonClicked });\r\n\r\n      this.#toggleUnit(buttonClicked); //activate the unit toggling based on the received command\r\n\r\n      this.#processWeatherData(false); //process weather data, but with the data that is already stored internally\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  weatherDataEntryPoint(data) {\r\n    try {\r\n      this.#argValidator(\"weatherDataEntryPoint\", { data });\r\n\r\n      this.#processWeatherData(true, data); //process weather data, but with the data that was supplied from the entry point\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\n//will hold data that represents the most up to date\r\nexport class WeatherAppFunctionality {\r\n  constructor(elementReferenceManager) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { elementReferenceManager }); //validate args\r\n\r\n      this.#helperClasses.elementReferenceManager = elementReferenceManager; //store the element reference instance to state\r\n\r\n      this.#initStateAndConfig(); //create the class instances\r\n\r\n      this.#linkWeatherDataManagerToPublisher(); //link the emit weather data to helpers class instance to the UI Functionality publisher\r\n\r\n      this.activate(); //activate the functionality right off the bat\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n  //------------------ARGUMENT-VALIDATION-----------------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      elementReferenceManager: {\r\n        instanceof: ElementRefManager,\r\n      },\r\n    },\r\n    weatherDataReceiver: {\r\n      data: {\r\n        type: \"object\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n               received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n               received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n             corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //---------------------STATE-AND-CONFIG-DATA------------------//\r\n\r\n  #helperClasses = {\r\n    weatherDataManager: null,\r\n    userInterfaceFunctionality: null,\r\n  };\r\n\r\n  #functionalityActive = false;\r\n\r\n  //------------------------HELPER-METHODS----------------------//\r\n\r\n  #initStateAndConfig() {\r\n    this.#helperClasses.weatherDataManager = new WeatherDataManager(\r\n      this.#helperClasses.elementReferenceManager\r\n    ); //make the emit class instance\r\n\r\n    this.#helperClasses.userInterfaceFunctionality =\r\n      new UserInterfaceFunctionality(\r\n        this.#helperClasses.elementReferenceManager\r\n      ); //make the user interface functionality class instance\r\n  }\r\n  //main entrypoint method that will commence initializing the state of\r\n  //this class instance\r\n\r\n  #linkWeatherDataManagerToPublisher() {\r\n    const { weatherDataManager, userInterfaceFunctionality } =\r\n      this.#helperClasses; //get the required helper class instances\r\n\r\n    userInterfaceFunctionality.subscribe(\r\n      \"WeatherDataManager\",\r\n      weatherDataManager.unitButtonEntryPoint.bind(weatherDataManager)\r\n    ); //have one helper class instance to subscribe to another\r\n    //class instance publisher, make sure to bind the supplied api to the class origin\r\n  }\r\n\r\n  #emitInboundDataToDependencies(data) {\r\n    if (this.#functionalityActive) {\r\n      const { weatherDataManager } = this.#helperClasses;\r\n\r\n      weatherDataManager.weatherDataEntryPoint(data);\r\n    }\r\n  }\r\n\r\n  //----------------------------APIs----------------------------//\r\n\r\n  //will be the entry point to receive weather data from both the search bar\r\n  //and the current location query portions of the app\r\n  weatherDataReceiver(data) {\r\n    try {\r\n      this.#argValidator(\"weatherDataReceiver\", { data }); //validate the inputs\r\n\r\n      this.#emitInboundDataToDependencies(data);\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //activate the weather app functionality\r\n  activate() {\r\n    try {\r\n      if (!this.#functionalityActive) {\r\n        this.#functionalityActive = true;\r\n      } else {\r\n        throw new Error(\r\n          `Failed to activate the weather app functionality, as it appears to already be on`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //deactivate the weather app functionality\r\n  deactivate() {\r\n    try {\r\n      if (!this.#functionalityActive) {\r\n        this.#functionalityActive = false;\r\n      } else {\r\n        throw new Error(\r\n          `Failed to deactivate the weather app functionality, as it appears to already be off`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","import { WeatherApi } from \"../Level-0/Api-Interfaces\";\r\nimport { CurrentLocationQuery } from \"../Level-1/Current-Location-Query\";\r\n\r\nexport class CurrentLocationWeather {\r\n  constructor(apiKey) {\r\n    try {\r\n      this.#argValidator(\"constructor\", { apiKey }); //validate the args\r\n\r\n      this.#configData.apiKey = apiKey; //save the api key for the specific end point to state\r\n\r\n      this.#initHelperClasses(); //initialize the various helper classes\r\n\r\n      this.#linkToCurrentLocationPublisher(); //makes this class instance subscribe to the current location query helper class publisher instance\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //-----------ARGUMENT-VALIDATION------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      apiKey: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n    subscribeToApiData: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n      entryPointMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    unsubscribeFromApiData: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n                       received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                        needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n                       received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n                     corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //-----------STATE-AND-CONFIG-DATA-----------//\r\n\r\n  #configData = {\r\n    apiKey: null,\r\n    numOfForecastDays: 7,\r\n  };\r\n\r\n  #helperClasses = {\r\n    currentLocationQuery: null,\r\n    weatherApi: null,\r\n  };\r\n\r\n  #mediatorMethod = (lon, lat, weatherApiInstance) => {\r\n    const locationCoords = `${lat},${lon}`,\r\n      weatherDataPromise = weatherApiInstance.getForecast(\r\n        locationCoords,\r\n        this.#configData.numOfForecastDays\r\n      );\r\n\r\n    //a promise that returns a data set representing a 7 day forecast for the supplied\r\n    //location using coordinates\r\n\r\n    return weatherDataPromise;\r\n  };\r\n\r\n  //---------------HELPER-CLASSES--------------//\r\n\r\n  #initHelperClasses() {\r\n    this.#helperClasses.weatherApi = new WeatherApi(this.#configData.apiKey); //make a new weather api interface class instance\r\n\r\n    this.#helperClasses.currentLocationQuery = new CurrentLocationQuery(\r\n      this.#helperClasses.weatherApi,\r\n      this.#mediatorMethod\r\n    ); //create a new current location query class instance supplying the weather api instance with a mediator method to return\r\n  }\r\n\r\n  #linkToCurrentLocationPublisher() {\r\n    const { currentLocationQuery } = this.#helperClasses,\r\n      classScope = this;\r\n\r\n    currentLocationQuery.subscribe(\r\n      \"currentLocationWeatherData\",\r\n      this.#weatherDataPublisher.bind(classScope)\r\n    );\r\n  }\r\n\r\n  //------------WEATHER-DATA-PUB-SUB-----------//\r\n\r\n  #weatherDataPublisher(data) {\r\n    const numOfSubscribers = Object.keys(this.#subscribers).length;\r\n\r\n    //check for subscribers\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#subscribers) {\r\n        this.#subscribers[subscriber](data);\r\n      }\r\n    }\r\n  }\r\n\r\n  #subscribers = {};\r\n\r\n  subscribeToApiData(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribeToApiData\", { subName, entryPointMethod });\r\n\r\n      if (!this.#subscribers.hasOwnProperty(subName)) {\r\n        this.#subscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(`Failed to add a subscriber to the search bar functionality publisher, as the\r\n          subscriber seems to already exist, received '${subName}' as the subscriber being added`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  unsubscribeFromApiData(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribeToApiData\", { subName });\r\n\r\n      if (this.#subscribers.hasOwnProperty(subName)) {\r\n        delete this.#subscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(`Failed to remove a subscriber from the search bar functionality publisher, as the\r\n          subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //-------------------APIs---------------------//\r\n\r\n  requestCurrentLocation() {\r\n    try {\r\n      const { currentLocationQuery } = this.#helperClasses;\r\n\r\n      currentLocationQuery.requestCurrentLocation();\r\n      //expose an api to request the current location of the user\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","import { ElementRefManager } from \"../Level-0/Element-Ref-Manager.js\";\r\nimport { WeatherApi } from \"../Level-0/Api-Interfaces.js\";\r\nimport { SearchBarFunctionality } from \"../Level-1/Search-Bar-Functionality.js\";\r\nimport { SearchBarConstructor } from \"../Level-1/Search-Bar-Constructor.js\";\r\n\r\n//CREATES THE ENTIRE SEARCH BAR FEATURE INCLUDING THE FUNCTIONALITY UPON CLASS INSTANCE\r\n//TAKES A UNIQUE IDENTIFIER AND AN API KEY SPECIFICALLY FOR 'weatherApi' FOR ITS CONSTRUCTOR ARGS\r\n\r\n//USES THE IMPORTED HELPER CLASSES IN ORDER TO MAKE A UNIQUE FEATURE IMPLEMENTATION, SPECIFICALLY FOR SEARCHING\r\n//FOR WEATHER DATA BASED ON THE SUPPLIED LOCATION\r\n\r\n//OFFERS A PUB SUB SUBSCRIPTION SO THAT ONE CAN ACCESS THE DATA RETRIEVED FROM THE SEARCH QUERY API\r\n//REQUEST. SUBSCRIBE TO THIS CLASS TO DO SO FOR WEATHER DATA BASED ON THE LOCATION SUPPLIED\r\n\r\n//will use the location emitted from the search bar functionality helper class in order to make an api request to the\r\n//weather api in the FindWeatherDataForLocation helper class\r\nclass FindWeatherDataForLocation {\r\n  constructor(searchBarFunctionalityInstance, apiKey) {\r\n    try {\r\n      this.#argValidator(\"constructor\", {\r\n        searchBarFunctionalityInstance,\r\n        apiKey,\r\n      }); //validate inbound args\r\n\r\n      //save the helper class dependency to state\r\n      this.#helperClasses.searchBarFunctionality =\r\n        searchBarFunctionalityInstance;\r\n\r\n      //make a new weather api interface instance in order to\r\n      //communicate with the api\r\n      this.#initWeatherApiInstance(apiKey);\r\n\r\n      //have this class subscribe to the supplied helper class\r\n      //since the helper class emits input data that will be used\r\n      //to make weather api requests\r\n      this.#subscribeToSearchBarFunctionalityPublisher();\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //--------------ARGUMENT-VALIDATION----------------//\r\n\r\n  #argValidationData = {\r\n    constructor: {\r\n      searchBarFunctionalityInstance: {\r\n        instanceof: SearchBarFunctionality,\r\n      },\r\n      apiKey: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n    subscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n      entryPointMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    unsubscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  //holds methods that actually do the validation of a specific supplied argument on one of its properties\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n           received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n            needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n           received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n         corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //-------------STATE-AND-CONFIG-DATA---------------//\r\n\r\n  #helperClasses = {\r\n    searchBarFunctionality: null,\r\n    weatherApi: null,\r\n  };\r\n\r\n  #numOfForecastDays = 7;\r\n\r\n  #requestInProgress = false;\r\n\r\n  //---------------HELPER-METHODS--------------------//\r\n\r\n  #initWeatherApiInstance(apiKey) {\r\n    this.#helperClasses.weatherApi = new WeatherApi(apiKey);\r\n  }\r\n\r\n  #subscribeToSearchBarFunctionalityPublisher() {\r\n    const { searchBarFunctionality } = this.#helperClasses,\r\n      classScope = this;\r\n\r\n    searchBarFunctionality.subscribe(\r\n      \"WeatherApiRequest\",\r\n      this.#makeApiRequest.bind(classScope)\r\n    );\r\n    //the supplied subscriber method executes an api request to the weather\r\n    //api using the input data. Also the method has to be binded to this class\r\n    //since the method came from this class scope but will be executed within the functionality\r\n    //manager helper scope\r\n  }\r\n\r\n  #makeApiRequest(inputValue) {\r\n    //wont make another request until the previous is done\r\n    if (!this.#requestInProgress) {\r\n      this.#requestInProgress = true;\r\n\r\n      const { weatherApi } = this.#helperClasses;\r\n\r\n      //return a promise for the weather api forecast data using the\r\n      //methods on the helper class instance\r\n      const weatherDataPromise = weatherApi.getForecast(\r\n          inputValue, //the location\r\n          this.#numOfForecastDays\r\n        ),\r\n        classScope = this;\r\n\r\n      //when the promise sucessfully resolves, the retrieved data\r\n      //is emitted to the subscribers of this class. Have to bind the scope\r\n      //to this class since the scope points to the promise object otherwise\r\n      weatherDataPromise\r\n        .then((data) => {\r\n          this.#emitRetrievedWeatherData.bind(classScope)(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error, error.stack);\r\n        })\r\n        .finally(() => {\r\n          this.#requestInProgress = false;\r\n        });\r\n      //no matter what happens the request is over,\r\n      //so reset the state to allow another to be made\r\n    }\r\n  }\r\n\r\n  //--------------FETCH-DATA-PUB-SUB-----------------//\r\n\r\n  #emitRetrievedWeatherData(weatherData) {\r\n    const numOfSubscribers = Object.keys(this.#subscribers).length;\r\n\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#subscribers) {\r\n        this.#subscribers[subscriber](weatherData);\r\n      }\r\n    }\r\n  }\r\n\r\n  #subscribers = {};\r\n\r\n  subscribe(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribe\", { subName, entryPointMethod });\r\n\r\n      if (!this.#subscribers.hasOwnProperty(subName)) {\r\n        this.#subscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to add a subscriber to the search bar weather data publisher, as the\r\n           subscriber seems to already exist, received '${subName}' as the subscriber being added`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n  unsubscribe(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribe\", { subName });\r\n\r\n      if (this.#subscribers.hasOwnProperty(subName)) {\r\n        delete this.#subscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to remove a subscriber from the search bar weather data publisher search bar publisher, as the\r\n           subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n\r\nexport class WeatherLocationSearchBar {\r\n  //facilitate the building of the entire search bar,\r\n  constructor(uniqueIdentifier, apiKey) {\r\n    this.#argValidator(\"constructor\", { uniqueIdentifier, apiKey }); //validate constructor args\r\n\r\n    //save the args to the class state\r\n    this.#apiKey = apiKey;\r\n    this.#uniqueIdentifier = uniqueIdentifier;\r\n\r\n    this.#initHelperClassInstances(); //init all of the helper class instances which they will already be supplied with the correct dependencies\r\n    this.#buildSearchBar(); //builds the search bar and saves it to the state\r\n\r\n    this.#subscribeToHelperPublishers(); //initializes the necessary subscriptions of the helper classes, both the search bar input values, and the api request values\r\n    this.activateFunctionality(); //turn on the functionality of the search bar after everything else\r\n  }\r\n\r\n  //------------------ARGUMENT-VALIDATION-------------------------//\r\n\r\n  #argValidationData = {\r\n    //method\r\n    constructor: {\r\n      //args\r\n      uniqueIdentifier: {\r\n        //properties of arg\r\n        type: \"string\",\r\n      },\r\n      apiKey: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n    subscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n      entryPointMethod: {\r\n        type: \"function\",\r\n      },\r\n    },\r\n    unsubscribe: {\r\n      subName: {\r\n        type: \"string\",\r\n      },\r\n    },\r\n    append: {\r\n      parentElement: {\r\n        instanceof: Element,\r\n      },\r\n    },\r\n    mediatorMethod: {\r\n      input: {\r\n        type: \"string\",\r\n      },\r\n      apiInstance: {\r\n        instanceof: WeatherApi,\r\n      },\r\n    },\r\n  };\r\n\r\n  //holds methods that actually do the validation of a specific supplied argument on one of its properties\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n           received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n            needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n           received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n         corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //------------------STATE-AND-CONFIG-DATA-----------------------//\r\n\r\n  #helperClassInstances = {\r\n    elementReferenceManager: null,\r\n    searchBarConstructor: null,\r\n    searchBarFunctionality: null,\r\n    findWeatherDataForLocation: null,\r\n  };\r\n\r\n  //--DEPENDENCY\r\n  #apiKey = null; //my api key to use the weatherapi endpoint\r\n\r\n  #uniqueIdentifier = null;\r\n\r\n  #functionalityOn = false;\r\n\r\n  #completeSearchBarElement = null;\r\n\r\n  //------------------CONSTRUCTOR-HELPER-METHODS-------------------//\r\n\r\n  #buildSearchBar() {\r\n    //build the complete search bar\r\n    const { searchBarConstructor } = this.#helperClassInstances,\r\n      completeSearchBarElement = searchBarConstructor.returnSearchBarFragment();\r\n\r\n    //save the complete search bar to state\r\n    this.#completeSearchBarElement = completeSearchBarElement;\r\n  }\r\n\r\n  #initHelperClassInstances() {\r\n    const {\r\n      elementReferenceManager,\r\n      searchBarConstructor,\r\n      searchBarFunctionality,\r\n      findWeatherDataForLocation,\r\n    } = this.#initMethods;\r\n\r\n    //inits all of the helper class instances in the correct order,\r\n    //some of these helpers use other helpers as dependencies\r\n    elementReferenceManager();\r\n    searchBarConstructor();\r\n    searchBarFunctionality();\r\n    findWeatherDataForLocation();\r\n  }\r\n\r\n  #subscribeToHelperPublishers() {\r\n    const { subscribeToApiData, subscribeToSearchBarInputValues } =\r\n      this.#initMethods;\r\n\r\n    //initializes the various subscriptions to the helper classes, so that\r\n    //this controller class can act as an interface to emit the received data\r\n    //from these helper classes\r\n    subscribeToSearchBarInputValues();\r\n    subscribeToApiData();\r\n  }\r\n\r\n  #initMethods = {\r\n    elementReferenceManager: () => {\r\n      this.#helperClassInstances.elementReferenceManager =\r\n        new ElementRefManager();\r\n    },\r\n    searchBarConstructor: () => {\r\n      //init the search bar constructor, which requires the element ref manager instance as a dependency\r\n      this.#helperClassInstances.searchBarConstructor =\r\n        new SearchBarConstructor({\r\n          elementReferenceManager:\r\n            this.#helperClassInstances.elementReferenceManager,\r\n          uniqueIdentifier: this.#uniqueIdentifier,\r\n          dynamicOptionsOn: false,\r\n          //all this means is to add a datalist element when applicable\r\n        });\r\n    },\r\n    searchBarFunctionality: () => {\r\n      //fetch the element references for the specific search bar instance\r\n      const searchBarFormRef =\r\n          this.#helperClassInstances.elementReferenceManager.retrieveRef(\r\n            \"Search-Bar-Form\"\r\n          ),\r\n        searchBarInputRef =\r\n          this.#helperClassInstances.elementReferenceManager.retrieveRef(\r\n            \"Search-Bar-Input\"\r\n          );\r\n\r\n      //init the search bar functionality class, which requires references to the search bar input and the form element that it exists within,\r\n      //as well as the api instance being used and the mediator method to connect the search bar functionality to the api instance\r\n      this.#helperClassInstances.searchBarFunctionality =\r\n        new SearchBarFunctionality({\r\n          searchBarForm: searchBarFormRef,\r\n          searchBarInput: searchBarInputRef,\r\n        });\r\n    },\r\n    findWeatherDataForLocation: () => {\r\n      this.#helperClassInstances.findWeatherDataForLocation =\r\n        new FindWeatherDataForLocation(\r\n          this.#helperClassInstances.searchBarFunctionality,\r\n          this.#apiKey\r\n        ); //should automatically subscribe to the search bar functionality class in order to make api requests with the location\r\n    },\r\n    subscribeToApiData: () => {\r\n      const { findWeatherDataForLocation } = this.#helperClassInstances,\r\n        classScope = this;\r\n\r\n      findWeatherDataForLocation.subscribe(\r\n        \"WeatherLocationSearchBarController\",\r\n        this.#apiDataPublisherEntryPoint.bind(classScope)\r\n      );\r\n      //since this method is from the controller class scope, need to\r\n      //bind the scope when its executed within the helper class\r\n    },\r\n    subscribeToSearchBarInputValues: () => {\r\n      const { searchBarFunctionality } = this.#helperClassInstances,\r\n        classScope = this;\r\n\r\n      searchBarFunctionality.subscribe(\r\n        \"WeatherLocationSearchBarController\",\r\n        this.#searchBarInputPublisherEntryPoint.bind(classScope)\r\n      );\r\n      //since this method is from the controller class scope, need to\r\n      //bind the scope when its executed within the helper class\r\n    },\r\n  };\r\n\r\n  //----------------SEARCH-BAR-INPUT-PUB-SUB---------------------//\r\n\r\n  //will be supplied to the SearchBar Functionality class subscription, so that the controller can emit\r\n  //the search bar input value on search queries\r\n  #searchBarInputPublisherEntryPoint(searchBarInput) {\r\n    const numOfSubscribers = Object.keys(\r\n      this.#searchBarInputSubscribers\r\n    ).length;\r\n\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#searchBarInputSubscribers) {\r\n        this.#searchBarInputSubscribers[subscriber](searchBarInput);\r\n      }\r\n    }\r\n  }\r\n\r\n  #searchBarInputSubscribers = {};\r\n\r\n  subscribeToSearchBarInput(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribe\", { subName, entryPointMethod });\r\n\r\n      if (!this.#searchBarInputSubscribers.hasOwnProperty(subName)) {\r\n        this.#searchBarInputSubscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to add a subscriber to the search bar input value publisher, as the\r\n           subscriber seems to already exist, received '${subName}' as the subscriber being added`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  } //\r\n\r\n  unsubscribeToSearchBarInput(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribe\", { subName });\r\n\r\n      if (this.#searchBarInputSubscribers.hasOwnProperty(subName)) {\r\n        delete this.#searchBarInputSubscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to remove a subscriber from the search bar input value publisher search bar publisher, as the\r\n           subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  } //\r\n\r\n  //--------------------API-DATA-PUB-SUB-------------------------//\r\n\r\n  //will be supplied to the Find Weather Data For Location subscription, so that the controller can emit\r\n  //data from successful api requests\r\n  #apiDataPublisherEntryPoint(apiData) {\r\n    const numOfSubscribers = Object.keys(this.#apiDataSubscribers).length;\r\n\r\n    if (numOfSubscribers > 0) {\r\n      for (let subscriber in this.#apiDataSubscribers) {\r\n        this.#apiDataSubscribers[subscriber](apiData);\r\n      }\r\n    }\r\n  }\r\n\r\n  //list of subscribers for the weather api data received based on the location supplied\r\n  //with their corresponding methods to execute when a successful api request goes through\r\n  #apiDataSubscribers = {};\r\n\r\n  subscribeToApiData(subName, entryPointMethod) {\r\n    try {\r\n      this.#argValidator(\"subscribe\", { subName, entryPointMethod });\r\n\r\n      if (!this.#apiDataSubscribers.hasOwnProperty(subName)) {\r\n        this.#apiDataSubscribers[subName] = entryPointMethod;\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to add a subscriber to the Weather API data publisher, as the\r\n           subscriber seems to already exist, received '${subName}' as the subscriber being added`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  unsubscribeFromApiData(subName) {\r\n    try {\r\n      this.#argValidator(\"unsubscribe\", { subName });\r\n\r\n      if (this.#apiDataSubscribers.hasOwnProperty(subName)) {\r\n        delete this.#apiDataSubscribers[subName];\r\n      } else {\r\n        throw new ReferenceError(\r\n          `Failed to remove a subscriber from the Weather API data publisher search bar publisher, as the\r\n           subscriber attempting to be removed does not exist, received '${subName}' as the subscriber being removed`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //--------------------------MAIN-APIs------------------------------//\r\n\r\n  //tools activate or deactivate the functionality behind the search bar instance\r\n  activateFunctionality() {\r\n    try {\r\n      if (!this.#functionalityOn) {\r\n        const { searchBarFunctionality } = this.#helperClassInstances;\r\n\r\n        searchBarFunctionality.activate();\r\n\r\n        this.#functionalityOn = true;\r\n      } else {\r\n        throw new Error(\r\n          `Failed to toggle the weather app search bar on, as it appears to already be on`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  deactivateFunctionality() {\r\n    try {\r\n      if (this.#functionalityOn) {\r\n        const { searchBarFunctionality } = this.#helperClassInstances;\r\n\r\n        searchBarFunctionality.deactivate();\r\n\r\n        this.#functionalityOn = false;\r\n      } else {\r\n        throw new Error(\r\n          `Failed to toggle the weather app search bar off, as it appears to already be off`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //append the complete search bar element after it has been made completely\r\n  returnFragment() {\r\n    try {\r\n      return this.#completeSearchBarElement;\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n}\r\n","//general dependencies\r\nimport { ElementRefManager } from \"../Level-0/Element-Ref-Manager.js\";\r\n\r\n//specific implementation for this app specifically\r\nimport { WeatherLocationSearchBar } from \"../Level-2/Weather-Location-Search-Bar.js\";\r\nimport { WeatherAppConstructor } from \"../Level-2/Weather-App-Constructor.js\";\r\nimport { WeatherAppFunctionality } from \"../Level-2/Weather-App-Functionality.js\";\r\nimport { CurrentLocationWeather } from \"../Level-2/Weather-Current-Location.js\";\r\n\r\n\r\n//orchestrates all of these sub classes together in order to form the entire weather app\r\n//will inject dependencies where they are needed etc. Will provide a way to customize\r\n//some features with the weather app\r\nexport class WeatherApp {\r\n  constructor() {\r\n    try {\r\n      this.#initHelperClasses(); //initialize the helper class instances that make up the entire weather app\r\n\r\n      this.#appendSearchBarFeatureToUI();\r\n      //appends the search bar feature to the main weather app element fragment, since the search\r\n      //bar is completely independent in nature\r\n\r\n      this.#linkObserverToWeatherDataPublishers();\r\n      //links the functionality helper class to any publishers that will emit\r\n      //weather data for said helper to use and render on the DOM, this includes the search bar\r\n      //and the current location weather helper classes\r\n\r\n      this.#retrieveWeatherAppFragment();\r\n      //retrieves the complete weather app from the constructor helper after everything else is initialized\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  //------------ARGUMENT-VALIDATION-------------//\r\n\r\n  #argValidationData = {\r\n    append: {\r\n      parentElement: {\r\n        instanceof: Element,\r\n      },\r\n    },\r\n  };\r\n\r\n  #validate = {\r\n    type: (suppliedArg, argName, methodOrigin, correctType) => {\r\n      if (typeof suppliedArg !== correctType) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed type validation,\r\n               received '${suppliedArg}' which has a type of '${typeof suppliedArg}',\r\n                needs to have the type '${correctType}'`\r\n        );\r\n      }\r\n    },\r\n    instanceof: (suppliedArg, argName, methodOrigin, correctInstance) => {\r\n      if (!(suppliedArg instanceof correctInstance)) {\r\n        throw new Error(\r\n          `Argument '${argName}' for method '${methodOrigin}' failed instance validation,\r\n               received '${suppliedArg}' which is not an instance of '${correctInstance}'`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  #argValidator(methodName, argsObj) {\r\n    if (this.#argValidationData.hasOwnProperty(methodName)) {\r\n      const methodValidationData = this.#argValidationData[methodName];\r\n\r\n      for (let arg in argsObj) {\r\n        const argValue = argsObj[arg];\r\n\r\n        //check if a supplied arg is a valid arg to supply\r\n        if (!methodValidationData.hasOwnProperty(arg)) {\r\n          throw new ReferenceError(\r\n            `Unrecognized argument for a specific method, received '${arg}' with a value of '${argsObj[arg]}'`\r\n          );\r\n        }\r\n\r\n        //go down the list of properties to check for on the specific arg\r\n        for (let property in methodValidationData[arg]) {\r\n          const correctValue = methodValidationData[arg][property]; //retrieve the data that will be used as a reference for validating the arg\r\n\r\n          this.#validate[property](argValue, arg, methodName, correctValue); //validate the arg based on the property being checked currently\r\n        }\r\n      }\r\n    } else {\r\n      throw new ReferenceError(\r\n        `Failed to validate the supplied arguments for a specific method, validation data\r\n             corresponding to this method does not exist, received '${methodName}' as the method being validated`\r\n      );\r\n    }\r\n  }\r\n\r\n  //-----------STATE-AND-CONFIG-DATA------------//\r\n\r\n  #helperClasses = {\r\n    elementReferenceManager: null,\r\n    weatherAppConstructor: null,\r\n    weatherAppFunctionality: null,\r\n    weatherLocationSearchBar: null,\r\n    currentLocationWeather: null,\r\n  };\r\n\r\n  #weatherAppFragment = null;\r\n\r\n  #configData = {\r\n    apiKey: `d9563f6e601e4aa199a205713232607`,\r\n    searchBarUniqueIdentifier: `Weather-Location`,\r\n  };\r\n\r\n  //---------------HELPER-METHODS---------------//\r\n\r\n  #initHelperClasses() {\r\n    //create the helper classes in this order, so that the element references stored upon\r\n    //element creation can be transfered from the constructor helper to the functionality helper\r\n    this.#helperClasses.elementReferenceManager = new ElementRefManager();\r\n\r\n    this.#helperClasses.weatherAppConstructor = new WeatherAppConstructor(\r\n      this.#helperClasses.elementReferenceManager\r\n    );\r\n    //uses the ref manager as a dependency, so that all created elements are immediately stored in the cache\r\n\r\n    this.#helperClasses.weatherAppFunctionality = new WeatherAppFunctionality(\r\n      this.#helperClasses.elementReferenceManager\r\n    );\r\n    //uses the same ref manager with all of the necessary elements already stored within it in order\r\n    //to facilitate functionality to existing elements\r\n\r\n    //a completely separate feature in nature, outside of the functionality helper, in fact\r\n    //the functionality helper will subscribe to this class in order to receive weather data\r\n    //based on locations that are searched\r\n    this.#helperClasses.weatherLocationSearchBar = new WeatherLocationSearchBar(\r\n      this.#configData.searchBarUniqueIdentifier,\r\n      this.#configData.apiKey\r\n    );\r\n    //need a unique identifier since the search bar is an independent feature in nature\r\n    //also needs an api key to connect with the weather api\r\n\r\n    //a module that takes the current location of the user, and then makes a weather api request\r\n    //using their location\r\n    this.#helperClasses.currentLocationWeather = new CurrentLocationWeather(\r\n      this.#configData.apiKey\r\n    );\r\n  }\r\n\r\n  #appendSearchBarFeatureToUI() {\r\n    const { elementReferenceManager, weatherLocationSearchBar } =\r\n      this.#helperClasses; //reference the appropriate helper classes to do so.\r\n\r\n    const containerForUI = elementReferenceManager.retrieveRef(\r\n        `User-Interface-Containers-Main-Container`\r\n      ),\r\n      firstChild = containerForUI.firstChild;\r\n    //retrieve the UI main container reference, and save its first child as a reference\r\n\r\n    const searchBarFrag = weatherLocationSearchBar.returnFragment();\r\n    //get the complete search bar fragment\r\n\r\n    containerForUI.insertBefore(searchBarFrag, firstChild);\r\n    //using the previously saved first child, insert the search bar\r\n    //before it so that the search bar is now the first child of the UI container\r\n  }\r\n\r\n  #linkObserverToWeatherDataPublishers() {\r\n    const {\r\n      weatherLocationSearchBar,\r\n      weatherAppFunctionality,\r\n      currentLocationWeather,\r\n    } = this.#helperClasses;\r\n\r\n    //link the weather app functionality helper to the search bar and the current location query module, so that\r\n    //it can receive weather data that is emitted by either the search bar or current location query,\r\n    //have to make sure to bind the supplied method to the functionality\r\n    //helper instance\r\n    weatherLocationSearchBar.subscribeToApiData(\r\n      \"Observer\",\r\n      weatherAppFunctionality.weatherDataReceiver.bind(weatherAppFunctionality)\r\n    );\r\n\r\n    currentLocationWeather.subscribeToApiData(\r\n      \"Observer\",\r\n      weatherAppFunctionality.weatherDataReceiver.bind(weatherAppFunctionality)\r\n    );\r\n  }\r\n\r\n  #retrieveWeatherAppFragment() {\r\n    const { weatherAppConstructor } = this.#helperClasses;\r\n\r\n    this.#weatherAppFragment = weatherAppConstructor.returnWeatherAppFragment();\r\n  }\r\n\r\n  //--------------------APIs--------------------//\r\n\r\n  append(parentElement) {\r\n    try {\r\n      this.#argValidator(\"append\", { parentElement });\r\n\r\n      parentElement.append(this.#weatherAppFragment);\r\n    } catch (error) {\r\n      console.error(error, error.stack);\r\n    }\r\n  }\r\n\r\n  useUserLocation() {\r\n    const { currentLocationWeather } = this.#helperClasses;\r\n\r\n    currentLocationWeather.requestCurrentLocation();\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","import { WeatherApp } from \"./modules/Level-3/Weather\";\r\n\r\nimport \"./stylesheets/Reset.css\";\r\nimport \"./stylesheets/Main.css\";\r\n\r\nimport \"./stylesheets/General_Info.css\";\r\nimport \"./stylesheets/Current_Weather.css\";\r\nimport \"./stylesheets/UI.css\";\r\nimport \"./stylesheets/Forecast.css\";\r\n\r\n(() => {\r\n  const weatherApp = new WeatherApp();\r\n\r\n  weatherApp.append(document.body); //append the app fragment\r\n\r\n  weatherApp.useUserLocation(); //request the user location for weather data\r\n})();\r\n"],"names":[],"sourceRoot":""}